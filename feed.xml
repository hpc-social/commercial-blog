<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US"><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="https://hpc.social/commercial-blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hpc.social/commercial-blog/" rel="alternate" type="text/html" hreflang="en-US" /><updated>2025-10-31T21:29:00-06:00</updated><id>https://hpc.social/commercial-blog/feed.xml</id><title type="html">hpc.social - Aggregated Commercial Blog</title><subtitle>Vendor and commercial posts in the hpc.social community</subtitle><author><name>hpc.social</name><email>info@hpc.social</email></author><entry><title type="html">Tangram Puzzles</title><link href="https://hpc.social/commercial-blog/2025/tangram-puzzles/" rel="alternate" type="text/html" title="Tangram Puzzles" /><published>2025-10-23T15:43:47-06:00</published><updated>2025-10-23T15:43:47-06:00</updated><id>https://hpc.social/commercial-blog/2025/tangram-puzzles</id><content type="html" xml:base="https://hpc.social/commercial-blog/2025/tangram-puzzles/"><![CDATA[<div class="content"><!--introduction-->
<p>The tangram is an ancient <a href="https://en.wikipedia.org/wiki/Tangram">Chinese puzzle</a> with seven pieces.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/swan_2.png" vspace="5" /> </p>

<!--/introduction-->
<h3>Contents</h3>
<div>
<ul>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#e3fac958-571e-4dfc-9943-c3e6250a779a">Variety</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#23d91121-5eca-43bb-b9ef-587b28b6f440">Schools</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#71e383f8-992a-444a-9334-aaa0af5bd8cf">Figures</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#3fe0b7fe-11b9-4809-962d-272da517b3ea">Puzzle</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#11e28fd4-f5c4-42a7-9c40-3350639dc0df">Kitty</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#92e32c00-95f1-47b6-88d0-cba48c41904b">Swan</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#32ee23f9-f6d0-4f66-aa77-32538b980b92">Square</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#33682566-0424-4870-9dcc-4617a477dc89">Web</a>
</li>
</ul>
</div>

<h4>Variety<a name="e3fac958-571e-4dfc-9943-c3e6250a779a"></a>
</h4>
<p>Tangram puzzles can be made with paper, plastic or wood.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/wooden_3.jpg" vspace="5" /> </p>

<h4>Schools<a name="23d91121-5eca-43bb-b9ef-587b28b6f440"></a>
</h4>
<p>School kids all over the world enjoy tangram puzzles.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/school.png" vspace="5" /> </p>

<h4>Figures<a name="71e383f8-992a-444a-9334-aaa0af5bd8cf"></a>
</h4>
<p>Thousands of figures, like these animals, can be made.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/animals.png" vspace="5" /> </p>

<h4>Puzzle<a name="3fe0b7fe-11b9-4809-962d-272da517b3ea"></a>
</h4>
<p>My MATLAB code <a href="https://blogs.mathworks.com/cleve/files/Tangram_mzip.m">Tangram</a> opens with a screen showing seven pieces, which are called <i>tans</i>. There are two large triangles, one medium triangle, two small triangles, one square, and one parallelogram.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Tangram_screen.png" vspace="5" /> </p>

<p>The puzzle is interactive. You can move the tans.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/open.gif" vspace="5" /> </p>

<h4>Kitty<a name="11e28fd4-f5c4-42a7-9c40-3350639dc0df"></a>
</h4>
<p>The kitty is a newcomer's favorite.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/kitty.gif" vspace="5" /> </p>

<h4>Swan<a name="92e32c00-95f1-47b6-88d0-cba48c41904b"></a>
</h4>
<p>The parallelogram is the only tans that does not have reflection symmetry. It needs to be reversed with the <tt>flipper</tt> button when forming shapes like this swan. The swan at the top of this blog is looking in the opposite direction and does not need its parallelogram flipped.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/swan.gif" vspace="5" /> </p>

<h4>Square<a name="32ee23f9-f6d0-4f66-aa77-32538b980b92"></a>
</h4>
<p>Here are the starting moves for making a square. You can finish the square yourself by downloading <a href="https://blogs.mathworks.com/cleve/files/Tangram_mzip.m">Tangram_mzip</a>.</p>

<p>Or, if you are not in a do-it-yourself mood and just want the answer, see <a href="https://blogs.mathworks.com/cleve/files/square_3.gif">square_3.gif</a>.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/start.gif" vspace="5" /> </p>

<h4>Web<a name="33682566-0424-4870-9dcc-4617a477dc89"></a>
</h4>
<p>There are hundreds of web sites about Tangrams. Here are two that I enjoyed.</p>

<p>
<a href="https://www.pinterest.com/ivahilator/tangram">https://www.pinterest.com/ivahilator/tangram</a>.</p>

<p>
<a href="https://kubiyagames.com/products/tangram-puzzle-two-sets-with-65-challenge-cards">https://kubiyagames.com/products/tangram-puzzle-two-sets-with-65-challenge-cards</a>.</p>

<!-- 
    function grabCode_8d7a45faf5094d1d99b8164f5491dfdd() {
        // Remember the title so we can use it in the new page
        title = document.title;

        // Break up these strings so that their presence
        // in the Javascript doesn't mess up the search for
        // the MATLAB code.
        t1='8d7a45faf5094d1d99b8164f5491dfdd ' + '##### ' + 'SOURCE BEGIN' + ' #####';
        t2='##### ' + 'SOURCE END' + ' #####' + ' 8d7a45faf5094d1d99b8164f5491dfdd';
    
        b=document.getElementsByTagName('body')[0];
        i1=b.innerHTML.indexOf(t1)+t1.length;
        i2=b.innerHTML.indexOf(t2);
 
        code_string = b.innerHTML.substring(i1, i2);
        code_string = code_string.replace(/REPLACE_WITH_DASH_DASH/g,'--');

        // Use /x3C/g instead of the less-than character to avoid errors 
        // in the XML parser.
        // Use '\x26#60;' instead of '<' so that the XML parser
        // doesn't go ahead and substitute the less-than character. 
        code_string = code_string.replace(/\x3C/g, '\x26#60;');

        copyright = 'Copyright 2025 The MathWorks, Inc.';

        w = window.open();
        d = w.document;
        d.write('<pre>\n');
        d.write(code_string);

        // Add copyright line at the bottom if specified.
        if (copyright.length > 0) {
            d.writeln('');
            d.writeln('%%');
            if (copyright.length > 0) {
                d.writeln('% _' + copyright + '_');
            }
        }

        d.write('</pre>\n');

        d.title = title + ' (MATLAB code)';
        d.close();
    }   
     -->
<p style="text-align: right; font-size: xx-small; font-weight: lighter; font-style: italic; color: gray;">
<br />
<a href=""><span style="font-size: x-small; font-style: italic;">Get 
      the MATLAB code <noscript>(requires JavaScript)</noscript>
</span></a>
<br />
<br />
      Published with MATLAB&reg; R2024b<br />
</p>

</div>

<!--
8d7a45faf5094d1d99b8164f5491dfdd ##### SOURCE BEGIN #####
%% Tangram Puzzle
% The tangram is an ancient 
% <https://en.wikipedia.org/wiki/Tangram Chinese puzzle>
% with seven pieces.
%
% <<swan_2.png>>

%% Variety
% Tangram puzzles can be made with paper, plastic or wood.
%
% <<wooden_3.jpg>>

%% Schools
% School kids all over the world enjoy tangram puzzles.
%
% <<school.png>>

%% Figures
% Thousands of figures, like these animals, can be made.
%
% <<animals.png>>


%% Puzzle
% My MATLAB code
% <https://blogs.mathworks.com/cleve/files/Tangram_mzip.m
% Tangram>
% opens with a screen showing seven pieces,
% which are called _tans_.
% There are
% two large triangles, one medium triangle, two small
% triangles, one square, and one parallelogram.
%
% <<Tangram_screen.png>>

%%
% The puzzle is interactive.  You can move the tans.
%
% <<open.gif>>

%% Kitty
% The kitty is a newcomer's favorite.
% 
% <<kitty.gif>>

%% Swan
% The parallelogram is the only tans that does not have reflection
% symmetry. It needs to be reversed with the |flipper| button when
% forming shapes like this swan.  The swan at the top of this blog
% is looking in the opposite direction and does not need its
% parallelogram flipped.
%
% <<swan.gif>>

%% Square
% Here are the starting moves for making a square.
% You can finish the square yourself by downloading 
% <https://blogs.mathworks.com/cleve/files/Tangram_mzip.m
% Tangram_mzip>.
%
% Or, if you are not in a do-it-yourself mood and just want the
% answer, see
% <https://blogs.mathworks.com/cleve/files/square_3.gif square_3.gif>.
% 
% <<start.gif>>
%

%% Web
% There are hundreds of web sites about Tangrams.
% Here are two that I enjoyed.
%
% <https://www.pinterest.com/ivahilator/tangram>.
%
% <https://kubiyagames.com/products/tangram-puzzle-two-sets-with-65-challenge-cards>.
% 
##### SOURCE END ##### 8d7a45faf5094d1d99b8164f5491dfdd
-->]]></content><author><name>MathWorks Blogs</name></author><category term="mathworks" /><summary type="html"><![CDATA[The tangram is an ancient Chinese puzzle with seven pieces.]]></summary></entry><entry><title type="html">Travel Report, JUIT, India</title><link href="https://hpc.social/commercial-blog/2025/travel-report-juit-india/" rel="alternate" type="text/html" title="Travel Report, JUIT, India" /><published>2025-10-11T18:44:22-06:00</published><updated>2025-10-11T18:44:22-06:00</updated><id>https://hpc.social/commercial-blog/2025/travel-report-juit-india</id><content type="html" xml:base="https://hpc.social/commercial-blog/2025/travel-report-juit-india/"><![CDATA[<div class="content"><!--introduction-->
<p>I was invited recently to give a virtual talk to the <a href="https://siam-juit.github.io/website/" target="_blank">student chapter</a> of SIAM at <a href="https://www.juit.ac.in/" target="_blank">JUIT</a>, the Jaycee Institute of Information Technology, in Wagnaghat, India.</p>

<!--/introduction-->
<h3>Contents</h3>
<div>
<ul>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#9b7f4a3a-3f0e-416c-ae83-4dcd73e87c90">Map</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#602cd942-67e2-4397-915a-87be911ecfdf">Himalayas</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#cf79fec0-2288-4b69-ada9-e8418fd16bbe">Campus</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#688035f2-a005-4994-8d1f-2a559158ecbf">Hosts</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#8bb57be7-694a-43d5-94f1-49104e59fb1c">Students</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#1e2c8a0f-10c7-454e-84d6-f310e6d35fbb">Library</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#df4b70c0-34b9-49d9-af6d-147e6adca8eb">Dorms</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#339c7e3e-a0cd-4427-a11e-55bc3861a50e">Tube</a>
</li>
</ul>
</div>

<pre class="codeinput">imshow(<span class="string">'icon.jpg'</span>)
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Juit_blog_01.png" vspace="5" /> <h4>Map<a name="9b7f4a3a-3f0e-416c-ae83-4dcd73e87c90"></a>
</h4>
<p>JUIT is in northern India between Nepal and Tibet to the east, and Pakistan and Afghanistan to the west.</p>

<pre class="codeinput">imshow(<span class="string">'juit_map.png'</span>)
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Juit_blog_02.png" vspace="5" /> <h4>Himalayas<a name="602cd942-67e2-4397-915a-87be911ecfdf"></a>
</h4>
<p>The campus sits at an altitude of 10,000 feet in the foothills of the Himalayas.</p>

<pre class="codeinput">imshow(<span class="string">'juit_foothills.jpg'</span>)
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Juit_blog_03.png" vspace="5" /> <h4>Campus<a name="cf79fec0-2288-4b69-ada9-e8418fd16bbe"></a>
</h4>
<p>The campus opened in 2002.</p>

<pre class="codeinput">imshow(<span class="string">'banner2.png'</span>)
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Juit_blog_04.png" vspace="5" /> <h4>Hosts<a name="688035f2-a005-4994-8d1f-2a559158ecbf"></a>
</h4>
<p>Here are my hosts -- Nandaya Vegad, Ritik Joshi and Omansh Sharma -- in the auditorium that will be used for my talk.</p>

<pre class="codeinput">imshow(<span class="string">'hosts.png'</span>)
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Juit_blog_05.png" vspace="5" /> <h4>Students<a name="8bb57be7-694a-43d5-94f1-49104e59fb1c"></a>
</h4>
<p>JUIT is a private technical university with selective admissions.</p>

<pre class="codeinput">imshow(<span class="string">'students.png'</span>)
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Juit_blog_06.png" vspace="5" /> <h4>Library<a name="1e2c8a0f-10c7-454e-84d6-f310e6d35fbb"></a>
</h4>
<p>The libraries are up to date.</p>

<pre class="codeinput">imshow(<span class="string">'library.png'</span>)
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Juit_blog_07.png" vspace="5" /> <h4>Dorms<a name="df4b70c0-34b9-49d9-af6d-147e6adca8eb"></a>
</h4>
<p>Many of the offices and dorms have courtyards.</p>

<pre class="codeinput">imshow(<span class="string">'dorms.png'</span>)
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Juit_blog_08.png" vspace="5" /> <h4>Tube<a name="339c7e3e-a0cd-4427-a11e-55bc3861a50e"></a>
</h4>
<p>I want to visit JUIT in person and walk though this tube.</p>

<pre class="codeinput">imshow(<span class="string">'Tube.png'</span>)
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Juit_blog_09.png" vspace="5" /> <!-- 
    function grabCode_a392cfdb259644ee8015ca5edfa30b0e() {
        // Remember the title so we can use it in the new page
        title = document.title;

        // Break up these strings so that their presence
        // in the Javascript doesn't mess up the search for
        // the MATLAB code.
        t1='a392cfdb259644ee8015ca5edfa30b0e ' + '##### ' + 'SOURCE BEGIN' + ' #####';
        t2='##### ' + 'SOURCE END' + ' #####' + ' a392cfdb259644ee8015ca5edfa30b0e';
    
        b=document.getElementsByTagName('body')[0];
        i1=b.innerHTML.indexOf(t1)+t1.length;
        i2=b.innerHTML.indexOf(t2);
 
        code_string = b.innerHTML.substring(i1, i2);
        code_string = code_string.replace(/REPLACE_WITH_DASH_DASH/g,'--');

        // Use /x3C/g instead of the less-than character to avoid errors 
        // in the XML parser.
        // Use '\x26#60;' instead of '<' so that the XML parser
        // doesn't go ahead and substitute the less-than character. 
        code_string = code_string.replace(/\x3C/g, '\x26#60;');

        copyright = 'Copyright 2025 The MathWorks, Inc.';

        w = window.open();
        d = w.document;
        d.write('<pre>\n');
        d.write(code_string);

        // Add copyright line at the bottom if specified.
        if (copyright.length > 0) {
            d.writeln('');
            d.writeln('%%');
            if (copyright.length > 0) {
                d.writeln('% _' + copyright + '_');
            }
        }

        d.write('</pre>\n');

        d.title = title + ' (MATLAB code)';
        d.close();
    }   
     -->
<p style="text-align: right; font-size: xx-small; font-weight: lighter; font-style: italic; color: gray;">
<br />
<a href=""><span style="font-size: x-small; font-style: italic;">Get 
      the MATLAB code <noscript>(requires JavaScript)</noscript>
</span></a>
<br />
<br />
      Published with MATLAB&reg; R2024b<br />
</p>

</div>

<!--
a392cfdb259644ee8015ca5edfa30b0e ##### SOURCE BEGIN #####
%% Virtual Travel Report, JUIT, India
% I was invited recently to give a virtual talk to the
% <https://siam-juit.github.io/website/ student chapter> of SIAM at
% <https://www.juit.ac.in/ JUIT>, 
% the Jaycee Institute of Information Technology,
% in Wagnaghat, India.
%%
    imshow('icon.jpg')

%% Map
% JUIT is in northern India between Nepal and Tibet 
% to the east, and Pakistan and Afghanistan to the west.

    imshow('juit_map.png')

%% Himalayas
% The campus sits at an altitude of 10,000 feet in the foothills
% of the Himalayas.

    imshow('juit_foothills.jpg')

%% Campus
% The campus opened in 2002.

    imshow('banner2.png')
    
%% Hosts
% Here are my hosts REPLACE_WITH_DASH_DASH Nandaya Vegad, Ritik Joshi and Omansh Sharma REPLACE_WITH_DASH_DASH
% in the auditorium that will be used for my talk.

    imshow('hosts.png')
 
%% Students
% JUIT is a private technical university with selective admissions.

    imshow('students.png')

%% Library
% The libraries are up to date.

    imshow('library.png')

%% Dorms
% Many of the offices and dorms have courtyards.

    imshow('dorms.png')

%% Tube
% I want to visit JUIT in person and walk though this tube.

    imshow('Tube.png')

##### SOURCE END ##### a392cfdb259644ee8015ca5edfa30b0e
-->]]></content><author><name>MathWorks Blogs</name></author><category term="mathworks" /><summary type="html"><![CDATA[I was invited recently to give a virtual talk to the student chapter of SIAM at JUIT, the Jaycee Institute of Information Technology, in Wagnaghat, India.]]></summary></entry><entry><title type="html">Wordler and I Fail on Puzzle 1497</title><link href="https://hpc.social/commercial-blog/2025/wordler-and-i-fail-on-puzzle-1497/" rel="alternate" type="text/html" title="Wordler and I Fail on Puzzle 1497" /><published>2025-07-29T19:44:54-06:00</published><updated>2025-07-29T19:44:54-06:00</updated><id>https://hpc.social/commercial-blog/2025/wordler-and-i-fail-on-puzzle-1497</id><content type="html" xml:base="https://hpc.social/commercial-blog/2025/wordler-and-i-fail-on-puzzle-1497/"><![CDATA[<div class="content"><!--introduction-->
<p>Like millions of other folks, I play <a href="https://www.nytimes.com/games/wordle"><i>Wordle</i></a> from the <i>New York Times</i> almost every day. The <i>Times</i> reports that <i>Wordle</i> puzzle number 1497 on Friday, July 25, was especially difficult. The average puzzler required 5.7 attempts and many failed to get the answer in the six moves allowed. I have a MATLAB assistant that I call Wordler and, even with her help, I failed on number 1497. Here's why.</p>

<p>(In 2022, <i>Wordle</i> was the most-searched term on Google worldwide. For more interesting facts about <i>Wordle</i>, see the <a href="https://en.wikipedia.org/wiki/Wordle">Wikipedia article</a>.)</p>

<!--/introduction-->
<h3>Contents</h3>
<div>
<ul>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#6821f7b2-f8a0-477b-af1a-90e617842627">Wordler</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#b9e94f76-063d-490c-baa5-ac3dbd89860f">Wordler's Vocabulary</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#d3faa9b1-8bcf-48d5-b799-d734e407e76c">Word One</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#e7c96b4b-26c7-4362-991f-f89625e418e4">Word Two</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#ecbedb8e-b368-424c-845c-13a8ffa38ca6">Word Three</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#4ae0c571-eeb1-4f98-a47c-b695cf181456">Word Four</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#bb6699b4-4722-41fc-a429-cec8fa1ce44e">Word Five</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#f48e61e4-4b42-48a7-865f-a8de79008a6a">Word Six</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#ec08f35c-412c-40b0-aa08-ef088e160836">Final Word</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#d2350965-9e73-48bc-a9a9-5745e964f356">Software</a>
</li>
</ul>
</div>

<h4>Wordler<a name="6821f7b2-f8a0-477b-af1a-90e617842627"></a>
</h4>
<p>Making a move in <i>Wordle</i> involves two tasks. First, thinking of the words that can be played, and second, deciding which of them to play. I like to make all the key decisions myself, so my assistant does not actually play <i>Wordle</i>. When I ask Wordler for help, she just lists all the words that could be played. It is up to me to choose one.</p>

<h4>Wordler's Vocabulary<a name="b9e94f76-063d-490c-baa5-ac3dbd89860f"></a>
</h4>
<p>Wordler's vocabulary is a hidden list of 2315 five-letter English words that are the possible solutions. The letter frequencies in this list are not the same as in English itself. For example, English has many five-letter words ending in S, but most of them are plural nouns and third-person singular verbs. The vocabulary does not have any of these. <i>Wordle</i> words end in S less than 2% of the time, compared to 31% of the time with the full set of five-letter words.</p>

<p>Here is a portion of the vocabulary.</p>

<pre class="codeinput">dbtype<span class="string">vocabulary</span><span class="string">1:9</span>dbtype<span class="string">vocabulary</span><span class="string">291:295</span>
</pre>
<pre class="codeoutput">
1     function vocab = vocabulary(~)
2         % vocabulary is 2315 words that are targets.
3            
4        vocab = [ ... 
5         "ABACK" "ABASE" "ABATE" "ABBEY" "ABBOT" "ABHOR" "ABIDE" "ABLED" ...
6         "ABODE" "ABORT" "ABOUT" "ABOVE" "ABUSE" "ABYSS" "ACORN" "ACRID" ...
7         "ACTOR" "ACUTE" "ADAGE" "ADAPT" "ADEPT" "ADMIN" "ADMIT" "ADOBE" ...
8         "ADOPT" "ADORE" "ADORN" "ADULT" "AFFIX" "AFIRE" "AFOOT" "AFOUL" ...
9         "AFTER" "AGAIN" "AGAPE" "AGATE" "AGENT" "AGILE" "AGING" "AGLOW" ...

291       "WORSE" "WORST" "WORTH" "WOULD" "WOUND" "WOVEN" "WRACK" "WRATH" ...
292       "WREAK" "WRECK" "WREST" "WRING" "WRIST" "WRITE" "WRONG" "WROTE" ...
293       "WRUNG" "WRYLY" "YACHT" "YEARN" "YEAST" "YIELD" "YOUNG" "YOUTH" ...
294       "ZEBRA" "ZESTY" "ZONAL" ];
295   end
</pre>
<h4>Word One<a name="d3faa9b1-8bcf-48d5-b799-d734e407e76c"></a>
</h4>
<p>I always start with the word LEAST. It contains two popular vowels, and I like to use mathematical and other technical words. On July 25, a gold E from the <i>Times</i> tells me that the answer has an E somewhere, but not in slot number 2. The remaining letters are black, so today's answer does not have any L, A, S or T.</p>

<p>(If I were to ask Wordler for assistance with the first word, she would just reply with all 2315 words she knows.)</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Wordler01.png" vspace="5" /> </p>

<h4>Word Two<a name="e7c96b4b-26c7-4362-991f-f89625e418e4"></a>
</h4>
<p>For the second word, I chose PHONE. It has the required E, as well as another popular vowel. It gets a gold O to go with the gold E.</p>

<p>(Wordler's suggestion in this situation would have been the 268 words containing an E in any slot except the second. That's not much help.)</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Wordler02.png" vspace="5" /> </p>

<h4>Word Three<a name="ecbedb8e-b368-424c-845c-13a8ffa38ca6"></a>
</h4>
<p>I know now that I am seeking a word with an E in any slot except 2 or 5, an O in any slot except 3, and no L, A, S, T, P, H or N. I decided to try COVER and am rewarded with three green letters.</p>

<p>(Wordler knows 23 words meeting the requirements.)</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Wordler03.png" vspace="5" /> </p>

<h4>Word Four<a name="4ae0c571-eeb1-4f98-a47c-b695cf181456"></a>
</h4>
<p>Here, for the first time, I decided to ask Wordler. I press the <tt>Words</tt> button and get some bad news. She tells me she knows seven possible words.</p>

<div>
<ul>
<li>BOXER</li>
<li>FOYER</li>
<li>JOKER</li>
<li>MOWER</li>
<li>ROGER</li>
<li>ROWER</li>
<li>WOOER</li>
</ul>
</div>

<p>I have only three guesses remaining. My odds of winning are less than 50-50. I chose MOWER because, if it is not correct, the three words containing W would be eliminated.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Wordler04.png" vspace="5" /> </p>

<h4>Word Five<a name="bb6699b4-4722-41fc-a429-cec8fa1ce44e"></a>
</h4>
<p>Getting worried, I chose ROGER because it has two Rs. Again, not much luck.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Wordler05.png" vspace="5" /> </p>

<h4>Word Six<a name="f48e61e4-4b42-48a7-865f-a8de79008a6a"></a>
</h4>
<p>This is my last chance and there are still three words remaining.</p>

<div>
<ul>
<li>BOXER</li>
<li>FOYER</li>
<li>JOKER</li>
</ul>
</div>

<p>Which would <i>you</i> choose?</p>

<p>I chose JOKER and strike out.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Wordler06.png" vspace="5" /> </p>

<h4>Final Word<a name="ec08f35c-412c-40b0-aa08-ef088e160836"></a>
</h4>
<p>If you happen to have played puzzle number 1497, you realize that Wordler is missing at least one word from her vocabulary. The word that tripped up so many last week is GOFER, which neither I nor my assistant thought of.</p>

<p>(Ever-helpful Google informs us that a <a href="https://www.google.com/search?q=gofer">GOFER</a> is "a person who runs errands, especially on a movie set or in an office.")</p>

<h4>Software<a name="d2350965-9e73-48bc-a9a9-5745e964f356"></a>
</h4>
<p>The current version of Wordler isn't ready for public consumption. As we have just seen, her vocabulary is incomplete. I also know of bugs when there are repeated letters. If you would like a copy anyway, send me an email.</p>

<!-- 
    function grabCode_cdfc5f3a37174fc19477d4e577edc688() {
        // Remember the title so we can use it in the new page
        title = document.title;

        // Break up these strings so that their presence
        // in the Javascript doesn't mess up the search for
        // the MATLAB code.
        t1='cdfc5f3a37174fc19477d4e577edc688 ' + '##### ' + 'SOURCE BEGIN' + ' #####';
        t2='##### ' + 'SOURCE END' + ' #####' + ' cdfc5f3a37174fc19477d4e577edc688';
    
        b=document.getElementsByTagName('body')[0];
        i1=b.innerHTML.indexOf(t1)+t1.length;
        i2=b.innerHTML.indexOf(t2);
 
        code_string = b.innerHTML.substring(i1, i2);
        code_string = code_string.replace(/REPLACE_WITH_DASH_DASH/g,'--');

        // Use /x3C/g instead of the less-than character to avoid errors 
        // in the XML parser.
        // Use '\x26#60;' instead of '<' so that the XML parser
        // doesn't go ahead and substitute the less-than character. 
        code_string = code_string.replace(/\x3C/g, '\x26#60;');

        copyright = 'Copyright 2025 The MathWorks, Inc.';

        w = window.open();
        d = w.document;
        d.write('<pre>\n');
        d.write(code_string);

        // Add copyright line at the bottom if specified.
        if (copyright.length > 0) {
            d.writeln('');
            d.writeln('%%');
            if (copyright.length > 0) {
                d.writeln('% _' + copyright + '_');
            }
        }

        d.write('</pre>\n');

        d.title = title + ' (MATLAB code)';
        d.close();
    }   
     -->
<p style="text-align: right; font-size: xx-small; font-weight: lighter; font-style: italic; color: gray;">
<br />
<a href=""><span style="font-size: x-small; font-style: italic;">Get 
      the MATLAB code <noscript>(requires JavaScript)</noscript>
</span></a>
<br />
<br />
      Published with MATLAB&reg; R2024b<br />
</p>

</div>

<!--
cdfc5f3a37174fc19477d4e577edc688 ##### SOURCE BEGIN #####
%% Wordler and I Fail on Puzzle 1497
% Like millions of other folks, I play
% <https://www.nytimes.com/games/wordle
% _Wordle_> from the _New York Times_ almost every day.  
% The _Times_ reports that _Wordle_ puzzle number 1497
% on Friday, July 25,
% was especially difficult.  The average puzzler required 5.7 attempts
% and many failed to get the answer in the six moves allowed.
% I have a MATLAB assistant that I call Wordler and, even with her
% help, I failed on number 1497.
% Here's why.
%
% (In 2022, _Wordle_ was the most-searched term on Google worldwide.
% For more interesting facts about _Wordle_, see the
% <https://en.wikipedia.org/wiki/Wordle
% Wikipedia article>.)

%% Wordler
% Making a move in _Wordle_ involves two tasks.  First, thinking
% of the words that can be played, and second,
% deciding which of them to play.
% I like to make all the key decisions myself, so my assistant does not
% actually play _Wordle_.
% When I ask Wordler for help, she just lists all 
% the words that could be played.  It is up to me to choose one.

%% Wordler's Vocabulary
%
% Wordler's vocabulary is a hidden list of 2315 five-letter English words
% that are the possible solutions.  The letter frequencies in this list
% are not the same as in English itself.  For example, English has many 
% five-letter words ending in S, but most of them are plural nouns
% and third-person singular verbs.  The vocabulary does not
% have any of these. _Wordle_ words end in S less than 2% of the time, 
% compared to 31% of the time with the full set of five-letter words.
%
% Here is a portion of the vocabulary.

dbtype vocabulary 1:9
dbtype vocabulary 291:295

%% Word One
% I always start with the word LEAST.  It contains two popular
% vowels, and I like to use mathematical and  other technical words.
% On July 25, a gold E from the _Times_ tells me that the answer
% has an E somewhere, but not in slot number 2.  The remaining letters
% are black, so today's answer does not have any L, A, S or T.
%
% (If I were to ask Wordler for assistance with the first word, she
% would just reply with all 2315 words she knows.)
%
% <<Wordler01.png>>
%

%% Word Two
% For the second word, I chose PHONE.  It has the required E, as 
% well as another popular vowel.  It gets a gold O to go with 
% the gold E.
%
% (Wordler's suggestion in this situation would have been the 268 words
% containing an E in any slot except the second.  That's not much help.)
%
% <<Wordler02.png>>
%

%% Word Three
% I know now that I am seeking a word with an E in any slot except
% 2 or 5, an O in any slot except 3, and no L, A, S, T, P,
% H or N.  I decided to try COVER and am rewarded with three green
% letters.
%
% (Wordler knows 23 words meeting the requirements.)
%
% <<Wordler03.png>>
%

%%  Word Four
% Here, for the first time, I decided to ask Wordler.  I press the |Words|
% button and get some bad news.
% She tells me she knows seven possible words.
%
% * BOXER
% * FOYER
% * JOKER
% * MOWER
% * ROGER
% * ROWER
% * WOOER
%
% I have only three guesses remaining. 
% My odds of winning are less than 50-50.
% I chose MOWER because, if it is not correct, the three words
% containing W would be eliminated.
%
% <<Wordler04.png>>
%

%% Word Five
% Getting worried, I chose ROGER because it has two Rs.
% Again, not much luck.
%
% <<Wordler05.png>>
%

%% Word Six
% This is my last chance and there are still three words remaining.
%
% * BOXER
% * FOYER
% * JOKER
% 
% Which would _you_ choose?
%
% I chose JOKER and strike out.
%
% <<Wordler06.png>>
%

%% Final Word
% If you happen to have played puzzle number 1497, you realize that
% Wordler is missing at least one word from her vocabulary.  The word
% that tripped up so many last week is GOFER, which neither I nor 
% my assistant thought of.
% 
% (Ever-helpful Google informs us that a
% <https://www.google.com/search?q=gofer GOFER> is "a person who runs 
% errands, especially on a movie set or in an office.")

%% Software
% The current version of Wordler isn't ready for public consumption.
% As we have just seen, her vocabulary is incomplete. I also know
% of bugs when there are repeated letters.  If you would like
% a copy anyway, send me an email.
##### SOURCE END ##### cdfc5f3a37174fc19477d4e577edc688
-->]]></content><author><name>MathWorks Blogs</name></author><category term="mathworks" /><summary type="html"><![CDATA[Like millions of other folks, I play Wordle from the New York Times almost every day. The Times reports that Wordle puzzle number 1497 on Friday, July 25, was especially difficult. The average puzzler required 5.7 attempts and many failed to get the answer in the six moves allowed. I have a MATLAB assistant that I call Wordler and, even with her help, I failed on number 1497. Here's why.]]></summary></entry><entry><title type="html">My Favorite MATLAB Demos</title><link href="https://hpc.social/commercial-blog/2025/my-favorite-matlab-demos/" rel="alternate" type="text/html" title="My Favorite MATLAB Demos" /><published>2025-07-12T14:01:57-06:00</published><updated>2025-07-12T14:01:57-06:00</updated><id>https://hpc.social/commercial-blog/2025/my-favorite-matlab-demos</id><content type="html" xml:base="https://hpc.social/commercial-blog/2025/my-favorite-matlab-demos/"><![CDATA[<div class="content"><!--introduction-->
<p>In 1988, while I was with Ardent Computer in Silicon Valley, I gave a talk that previewed MATLAB graphics. The title was "Pictures of Matrices". At the time, a mathematician friend of mine asked.</p>

<pre>  Why would anyone want pictures of matrices?</pre>
<p>My response is the graphics demonstrations that we have done over the years. Here is a baker's dozen of my favorite examples.</p>

<!--/introduction-->
<h3>Contents</h3>
<div>
<ul>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#1050b54b-03cc-4651-a92f-08b47bce1aba">Vibes</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#cca646f4-d29d-4f64-8b12-9c8d6868aa07">Pitch, Roll and Yaw</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#523be0a1-ef64-4117-8827-aadab1aec717">Rubiks Cube</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#6c148e13-491e-48c4-8a1f-17bd6e1208ab">Eigenwalker</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#5808e6ab-e3fa-4128-b43b-94218f7d6659">Simulation</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#37dae5b7-d02a-41e0-805c-11d11d1418f8">Sponge</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#9916dfbf-68eb-45a6-8e75-695014dcbc68">Drums</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#744ce13d-9dbe-42d9-a2df-f3d6dc3c2548">Jahnke and Emde</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#52de6435-9b73-4c4e-8402-401b64ad6571">Penny</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#3fe4f412-05a9-4faf-823f-321a39baeb80">Jordan Form</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#c90e69f0-d3f5-4e44-a23a-c7434bffc251">Expshow</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#b73f8b6f-ac84-4b66-9b08-303afb8eaf13">Eigshow</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#8cac3156-b0b3-47d7-abf4-653302fc719c">Eden</a>
</li>
</ul>
</div>

<h4>Vibes<a name="1050b54b-03cc-4651-a92f-08b47bce1aba"></a>
</h4>
<p>The vibrating L-shaped membrane.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2023/12/13/blog-post-number-300-vibrating-logo/">https://blogs.mathworks.com/cleve/2023/12/13/blog-post-number-300-vibrating-logo/</a>.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/vibes.gif" vspace="5" /> </p>

<h4>Pitch, Roll and Yaw<a name="cca646f4-d29d-4f64-8b12-9c8d6868aa07"></a>
</h4>
<p>Studying rotations.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2023/02/10/grafix-users-guide/">https://blogs.mathworks.com/cleve/2023/02/10/grafix-users-guide/</a>
</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/Graphics.png" vspace="5" /> </p>

<h4>Rubiks Cube<a name="523be0a1-ef64-4117-8827-aadab1aec717"></a>
</h4>
<p>The world's greatest mathematical puzzle.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2022/04/04/digital-simulation-of-rubiks-cube/">https://blogs.mathworks.com/cleve/2022/04/04/digital-simulation-of-rubiks-cube/</a>
</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/Qube_simplified.png" vspace="5" /> </p>

<h4>Eigenwalker<a name="6c148e13-491e-48c4-8a1f-17bd6e1208ab"></a>
</h4>
<p>Principle component analysis of the human gait.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2016/04/11/the-eigenwalker-model-of-the-human-gait/">https://blogs.mathworks.com/cleve/2016/04/11/the-eigenwalker-model-of-the-human-gait/</a>
</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/walker.gif" vspace="5" /> </p>

<h4>Simulation<a name="5808e6ab-e3fa-4128-b43b-94218f7d6659"></a>
</h4>
<p>Simulink at the test track.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2023/09/11/exploring-matrices/">https://blogs.mathworks.com/cleve/2023/09/11/exploring-matrices/</a>
</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/Simulink.png" vspace="5" /> </p>

<h4>Sponge<a name="37dae5b7-d02a-41e0-805c-11d11d1418f8"></a>
</h4>
<p>The Menger sponge is a popular fractal that generalizes Cantor sets and Sierpinski triangles.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2021/12/06/the-menger-sponge-fractal/">https://blogs.mathworks.com/cleve/2021/12/06/the-menger-sponge-fractal/</a>
</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/sponge2.png" vspace="5" /> </p>

<h4>Drums<a name="9916dfbf-68eb-45a6-8e75-695014dcbc68"></a>
</h4>
<p>Contour plots of isospectral pairs.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2012/08/06/can-one-hear-the-shape-of-a-drum-part-1-eigenvalues/">https://blogs.mathworks.com/cleve/2012/08/06/can-one-hear-the-shape-of-a-drum-part-1-eigenvalues/</a>
</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/drums.png" vspace="5" /> </p>

<h4>Jahnke and Emde<a name="744ce13d-9dbe-42d9-a2df-f3d6dc3c2548"></a>
</h4>
<p>Contour plot of the Hankel function, based on a hand drawing in a 1933 book by German mathematicians Eugene Jahnke and Fritz Emde.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2014/12/15/jahnke-and-emde-revisited/">https://blogs.mathworks.com/cleve/2014/12/15/jahnke-and-emde-revisited/</a>
</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/jahnke.png" vspace="5" /> </p>

<h4>Penny<a name="52de6435-9b73-4c4e-8402-401b64ad6571"></a>
</h4>
<p>High resolution measurements of the depth of the mold for the United States one cent coin.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2014/03/17/higher-resolution-penny/">https://blogs.mathworks.com/cleve/2014/03/17/higher-resolution-penny/</a>
</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/penny.png" vspace="5" /> </p>

<h4>Jordan Form<a name="3fe4f412-05a9-4faf-823f-321a39baeb80"></a>
</h4>
<p>Jordan Canonical Form of the 64-by-64 Redheffer matrix from the <a href="https://www.mathworks.com/help/releases/R2024b/matlab/ref/gallery.html">MATLAB Gallery</a>.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2025/06/12/a-million-dollar-matrix/">https://blogs.mathworks.com/cleve/2025/06/12/a-million-dollar-matrix/</a>
</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/jcf64.png" vspace="5" /> </p>

<h4>Expshow<a name="c90e69f0-d3f5-4e44-a23a-c7434bffc251"></a>
</h4>
<p>An interactive graphical experiment lets you discover the value of one of the most important numerical quantities in mathematics.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2015/07/27/discover-e-with-a-graphical-experiment/">https://blogs.mathworks.com/cleve/2015/07/27/discover-e-with-a-graphical-experiment/</a>
</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/expshow.gif" vspace="5" /> </p>

<h4>Eigshow<a name="b73f8b6f-ac84-4b66-9b08-303afb8eaf13"></a>
</h4>
<p>One of my all-time favorite MATLAB examples is eigshow.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2013/07/08/eigshow-week-1">https://blogs.mathworks.com/cleve/2013/07/08/eigshow-week-1</a>
</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/eigshowp.gif" vspace="5" /> </p>

<h4>Eden<a name="8cac3156-b0b3-47d7-abf4-653302fc719c"></a>
</h4>
<p>This sketch of the MathWorks Logo was made by Eden Rajapakse when she was ten years old. Her blog post has received more "likes" than any other post.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2021/12/23/a-new-view-of-our-logo/">https://blogs.mathworks.com/cleve/2021/12/23/a-new-view-of-our-logo/</a>
</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/Eden.png" vspace="5" /> </p>

<!-- 
    function grabCode_2ccfc7657e20451c9a4b077ee478fbf0() {
        // Remember the title so we can use it in the new page
        title = document.title;

        // Break up these strings so that their presence
        // in the Javascript doesn't mess up the search for
        // the MATLAB code.
        t1='2ccfc7657e20451c9a4b077ee478fbf0 ' + '##### ' + 'SOURCE BEGIN' + ' #####';
        t2='##### ' + 'SOURCE END' + ' #####' + ' 2ccfc7657e20451c9a4b077ee478fbf0';
    
        b=document.getElementsByTagName('body')[0];
        i1=b.innerHTML.indexOf(t1)+t1.length;
        i2=b.innerHTML.indexOf(t2);
 
        code_string = b.innerHTML.substring(i1, i2);
        code_string = code_string.replace(/REPLACE_WITH_DASH_DASH/g,'--');

        // Use /x3C/g instead of the less-than character to avoid errors 
        // in the XML parser.
        // Use '\x26#60;' instead of '<' so that the XML parser
        // doesn't go ahead and substitute the less-than character. 
        code_string = code_string.replace(/\x3C/g, '\x26#60;');

        copyright = 'Copyright 2025 The MathWorks, Inc.';

        w = window.open();
        d = w.document;
        d.write('<pre>\n');
        d.write(code_string);

        // Add copyright line at the bottom if specified.
        if (copyright.length > 0) {
            d.writeln('');
            d.writeln('%%');
            if (copyright.length > 0) {
                d.writeln('% _' + copyright + '_');
            }
        }

        d.write('</pre>\n');

        d.title = title + ' (MATLAB code)';
        d.close();
    }   
     -->
<p style="text-align: right; font-size: xx-small; font-weight: lighter; font-style: italic; color: gray;">
<br />
<a href=""><span style="font-size: x-small; font-style: italic;">Get 
      the MATLAB code <noscript>(requires JavaScript)</noscript>
</span></a>
<br />
<br />
      Published with MATLAB&reg; R2024b<br />
</p>

</div>

<!--
2ccfc7657e20451c9a4b077ee478fbf0 ##### SOURCE BEGIN #####
%% My Favorite MATLAB Demos
% In 1988, while I was with Ardent Computer in Silicon Valley,
% I gave a talk that previewed MATLAB graphics.  The title was
% "Pictures of Matrices".  At the time, a mathematician friend
% of mine asked.
%
%    Why would anyone want pictures of matrices?
%
% My response is the graphics demonstrations that we have done over the
% years.  Here is a baker's dozen of my favorite examples.

%% Vibes
% The vibrating L-shaped membrane.
%
% <https://blogs.mathworks.com/cleve/2023/12/13/blog-post-number-300-vibrating-logo></https://blogs.mathworks.com/cleve/2023/12/13/blog-post-number-300-vibrating-logo>.
%
% <<vibes.gif>>
%


%% Pitch, Roll and Yaw
% Studying rotations.
%
% <https://blogs.mathworks.com/cleve/2023/02/10/grafix-users-guide></https://blogs.mathworks.com/cleve/2023/02/10/grafix-users-guide>
%
% <<Graphics.png>>
%

%% Rubiks Cube
% The world's greatest mathematical puzzle.
%
% <https://blogs.mathworks.com/cleve/2022/04/04/digital-simulation-of-rubiks-cube></https://blogs.mathworks.com/cleve/2022/04/04/digital-simulation-of-rubiks-cube>
%
% <<Qube_simplified.png>>
%
  
%% Eigenwalker
% Principle component analysis of the human gait.
%
% <https://blogs.mathworks.com/cleve/2016/04/11/the-eigenwalker-model-of-the-human-gait></https://blogs.mathworks.com/cleve/2016/04/11/the-eigenwalker-model-of-the-human-gait>
%
% <<walker.gif>>
%

%% Simulation
% Simulink at the test track.
%
% <https://blogs.mathworks.com/cleve/2023/09/11/exploring-matrices></https://blogs.mathworks.com/cleve/2023/09/11/exploring-matrices>
%
% <<Simulink.png>>

%% Sponge
% The Menger sponge is a popular fractal that generalizes Cantor sets 
% and Sierpinski triangles. 
%
% <https://blogs.mathworks.com/cleve/2021/12/06/the-menger-sponge-fractal></https://blogs.mathworks.com/cleve/2021/12/06/the-menger-sponge-fractal>
%
% <<sponge2.png>>

%% Drums
% Contour plots of isospectral pairs.
%
% <https://blogs.mathworks.com/cleve/2012/08/06/can-one-hear-the-shape-of-a-drum-part-1-eigenvalues></https://blogs.mathworks.com/cleve/2012/08/06/can-one-hear-the-shape-of-a-drum-part-1-eigenvalues>
%
% <<drums.png>>

%% Jahnke and Emde
% Contour plot of the Hankel function,
% based on a hand drawing in a 1933 book by
% German mathematicians Eugene Jahnke and Fritz Emde.
%
% <https://blogs.mathworks.com/cleve/2014/12/15/jahnke-and-emde-revisited></https://blogs.mathworks.com/cleve/2014/12/15/jahnke-and-emde-revisited>
%
% <<jahnke.png>>

%% Penny
% High resolution measurements of the depth of the mold for the
% United States one cent coin.
%
% <https://blogs.mathworks.com/cleve/2014/03/17/higher-resolution-penny></https://blogs.mathworks.com/cleve/2014/03/17/higher-resolution-penny>
%
% <<penny.png>>

%% Jordan Form
% Jordan Canonical Form of the 64-by-64 Redheffer matrix
% from the 
% <https://www.mathworks.com/help/releases/R2024b/matlab/ref/gallery.html
% MATLAB Gallery>.
%
% <https://blogs.mathworks.com/cleve/2025/06/12/a-million-dollar-matrix></https://blogs.mathworks.com/cleve/2025/06/12/a-million-dollar-matrix>
%
% <<jcf64.png>>

%% Expshow
% An interactive graphical experiment lets you discover the value of one of the most important numerical quantities in mathematics.
%
% <https://blogs.mathworks.com/cleve/2015/07/27/discover-e-with-a-graphical-experiment></https://blogs.mathworks.com/cleve/2015/07/27/discover-e-with-a-graphical-experiment>
%
% <<expshow.gif>>

%% Eigshow
% One of my all-time favorite MATLAB examples is eigshow.
%
% <https://blogs.mathworks.com/cleve/2013/07/08/eigshow-week-1>
%
% <<eigshowp.gif>>
%
%% Eden
% This sketch of the MathWorks Logo was made by Eden Rajapakse when 
% she was ten years old.  Her blog post has received more "likes"
% than any other post.
%
% <https://blogs.mathworks.com/cleve/2021/12/23/a-new-view-of-our-logo></https://blogs.mathworks.com/cleve/2021/12/23/a-new-view-of-our-logo>
%
% <<Eden.png>>
%


##### SOURCE END ##### 2ccfc7657e20451c9a4b077ee478fbf0
-->]]></content><author><name>MathWorks Blogs</name></author><category term="mathworks" /><summary type="html"><![CDATA[In 1988, while I was with Ardent Computer in Silicon Valley, I gave a talk that previewed MATLAB graphics. The title was "Pictures of Matrices". At the time, a mathematician friend of mine asked.]]></summary></entry><entry><title type="html">Trip Report, Householder XXII</title><link href="https://hpc.social/commercial-blog/2025/trip-report-householder-xxii/" rel="alternate" type="text/html" title="Trip Report, Householder XXII" /><published>2025-06-21T17:58:32-06:00</published><updated>2025-06-21T17:58:32-06:00</updated><id>https://hpc.social/commercial-blog/2025/trip-report-householder-xxii</id><content type="html" xml:base="https://hpc.social/commercial-blog/2025/trip-report-householder-xxii/"><![CDATA[<div class="content"><!--introduction-->
<p>The twenty-second Householder Symposium on Numerical Linear Algebra was held June 8 - June 13 at Cornell. The local organizers were Anil Damle, Alex Townsend and David Bindel. Anil served as host and cheerleader.</p>

<p>
<a href="https://blogs.mathworks.com/cleve/2025/06/12/a-million-dollar-matrix/">My talk</a> was Wednesday morning. Here is the complete <a href="https://householder-symposium.github.io/schedule.html">schedule</a>.</p>

<!--/introduction-->
<h3>Contents</h3>
<div>
<ul>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#f402423b-cb81-4e90-93ab-76eebe7e3bff">Group Selfie</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#900d99fc-07f7-4a8c-a630-0e6c7f347a8c">Poster Session</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#ef80a124-71d5-4978-82d7-cd69347d59c9">Quantum Computing</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#650df2ca-6b59-4e9d-b3b9-f02a4cf2bb10">Householder Prizes</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#af59e9bd-360d-4e8c-9096-dd5f227784ea">Excursion</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#928e34bb-faf3-4382-960a-704094ecbfe4">Gr&uuml;ezi</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#f6f32e88-3fc4-4287-93d4-17b877519b2b">Thanks</a>
</li>
</ul>
</div>

<h4>Group Selfie<a name="f402423b-cb81-4e90-93ab-76eebe7e3bff"></a>
</h4>
<p>Anil and Erik De Sturle orchestrated this group selfie. Can you find me? Do you recognize anyone else?</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/HXXII_selfie.png" vspace="5" /> </p>

<h4>Poster Session<a name="900d99fc-07f7-4a8c-a630-0e6c7f347a8c"></a>
</h4>
<p>The Tuesday evening poster session was a high point of the meeting. Over 50 posters were set up in the Statler Terrace. We mingled, drank beer, ate ice cream and discussed the posters with their authors. I was impressed by the number of young people doing exciting work.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Posters.png" vspace="5" /> </p>

<h4>Quantum Computing<a name="ef80a124-71d5-4978-82d7-cd69347d59c9"></a>
</h4>
<p>A poster by Christine Tobler from MathWorks described the MATLAB Support Package for Quantum Computing. One model of a hypothetical quantum computer involves a state vector of probabilities and multiplication by unitary matrices.</p>

<div>
<ul>
<li>
<a href="https://www.mathworks.com/content/dam/mathworks/handout/quantum-computing-cheat-sheet.pdf">https://www.mathworks.com/content/dam/mathworks/handout/quantum-computing-cheat-sheet.pdf</a>.</li>
</ul>
</div>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Christine.png" vspace="5" /> </p>

<p>A second poster by Sophia Keip, visiting Lawrence Berkeley National Laboratory from Fern Universit&auml;t in Hagen, Germany, and a plenary talk by Roel Van Beeumen from LBL, described QCLAB, another MATLAB quantum toolbox</p>

<div>
<ul>
<li>
<a href="https://github.com/QuantumComputingLab/qclab">https://github.com/QuantumComputingLab/qclab</a>.</li>
</ul>
</div>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/QCLAB_poster.jpg" vspace="5" /> </p>

<h4>Householder Prizes<a name="650df2ca-6b59-4e9d-b3b9-f02a4cf2bb10"></a>
</h4>
<p>The Alston S. Householder Prize is awarded to the author of the best dissertation in numerical linear algebra submitted over the previous three years. This time there were two prize-winning submissions described in a special plenary session on Thursday evening.</p>

<p>Alice Cortinovis from the University of Pisa won the prize for a dissertation supervised by Daniel Kressner from the Swiss Federal Institute of Technology in Lausanne.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Alice.png" vspace="5" /> </p>

<p>Jorge Garza-Vargas from Caltech and Jess Banks from U. C. Berkeley shared a second prize for a pair of dissertations supervised by Nikhil Srivastava from Berkeley. Jorge gave the talk.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Jorge.png" vspace="5" /> </p>

<h4>Excursion<a name="af59e9bd-360d-4e8c-9096-dd5f227784ea"></a>
</h4>
<p>A tradition at the seminars is the Wednesday afternoon excursion. This year we had the choice of a serious hike, an easy walk, a visit to a nearby winery, or a nap at the hotel. The walk was on the Gorge trail in Taughannock Falls State Park and was fabulous.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Taughannock.png" vspace="5" /> </p>

<h4>Gr&uuml;ezi<a name="928e34bb-faf3-4382-960a-704094ecbfe4"></a>
</h4>
<p>Gr&uuml;ezi is Swiss German for Hello. Anyone planning to attend the Householder seminar in 2028 should learn how to pronounce Gr&uuml;ezi. The seminar will be in Pontresina, Switzerland. Bart Vandereycken made the announcement.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Pontresina.png" vspace="5" /> </p>

<p>Pontresina was also the site for the Householder seminar in 1996. The Wednesday excursion at that meeting was a hike down the Morteratsch glacier at Diavolezza.</p>

<p>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/Glacier.png" vspace="5" /> </p>

<h4>Thanks<a name="f6f32e88-3fc4-4287-93d4-17b877519b2b"></a>
</h4>
<p>Thanks to Erik De Sturle for several of these photos.</p>

<!-- 
    function grabCode_3fc25520ada249c38d629067b3d5dc17() {
        // Remember the title so we can use it in the new page
        title = document.title;

        // Break up these strings so that their presence
        // in the Javascript doesn't mess up the search for
        // the MATLAB code.
        t1='3fc25520ada249c38d629067b3d5dc17 ' + '##### ' + 'SOURCE BEGIN' + ' #####';
        t2='##### ' + 'SOURCE END' + ' #####' + ' 3fc25520ada249c38d629067b3d5dc17';
    
        b=document.getElementsByTagName('body')[0];
        i1=b.innerHTML.indexOf(t1)+t1.length;
        i2=b.innerHTML.indexOf(t2);
 
        code_string = b.innerHTML.substring(i1, i2);
        code_string = code_string.replace(/REPLACE_WITH_DASH_DASH/g,'--');

        // Use /x3C/g instead of the less-than character to avoid errors 
        // in the XML parser.
        // Use '\x26#60;' instead of '<' so that the XML parser
        // doesn't go ahead and substitute the less-than character. 
        code_string = code_string.replace(/\x3C/g, '\x26#60;');

        copyright = 'Copyright 2025 The MathWorks, Inc.';

        w = window.open();
        d = w.document;
        d.write('<pre>\n');
        d.write(code_string);

        // Add copyright line at the bottom if specified.
        if (copyright.length > 0) {
            d.writeln('');
            d.writeln('%%');
            if (copyright.length > 0) {
                d.writeln('% _' + copyright + '_');
            }
        }

        d.write('</pre>\n');

        d.title = title + ' (MATLAB code)';
        d.close();
    }   
     -->
<p style="text-align: right; font-size: xx-small; font-weight: lighter; font-style: italic; color: gray;">
<br />
<a href=""><span style="font-size: x-small; font-style: italic;">Get 
      the MATLAB code <noscript>(requires JavaScript)</noscript>
</span></a>
<br />
<br />
      Published with MATLAB&reg; R2024b<br />
</p>

</div>

<!--
3fc25520ada249c38d629067b3d5dc17 ##### SOURCE BEGIN #####
%% Trip Report, Householder XXII
% The twenty-second
% Householder Symposium on Numerical Linear Algebra was 
% held June 8 - June 13 at Cornell.
% The local organizers were Anil Damle,
% Alex Townsend and David Bindel.  Anil served as host and
% cheerleader.  
%
% <https://blogs.mathworks.com/cleve/2025/06/12/a-million-dollar-matrix/
% My talk> was Wednesday morning.
% Here is the complete
% <https://householder-symposium.github.io/schedule.html schedule>.

%% Group Selfie
% Anil and Erik De Sturle orchestrated this group selfie.
% Can you find me?  Do you recognize anyone else?
%
% <<HXXII_selfie.png>>
%

%% Poster Session
% The Tuesday evening poster session was a high point of the meeting.
% Over 50 posters were set up in the Statler Terrace.
% We mingled, drank beer, ate ice cream and
% discussed the posters with their authors.
% I was impressed by the number of young people doing exciting work.
%
% <<Posters.png>>

%% Quantum Computing
% A poster by Christine Tobler from MathWorks described the 
% MATLAB Support Package for Quantum Computing.
% One model of a hypothetical quantum computer involves a
% state vector of probabilities and multiplication by unitary matrices.
%
% * <https://www.mathworks.com/content/dam/mathworks/handout/quantum-computing-cheat-sheet.pdf>.
%
% <<Christine.png>>
%
% A second poster by Sophia Keip, visiting
% Lawrence Berkeley National Laboratory from Fern Universität in
% Hagen, Germany, and a plenary talk by 
% Roel Van Beeumen from LBL, 
% described QCLAB, another MATLAB quantum toolbox
%
% * <https://github.com/QuantumComputingLab/qclab>.
%
% <<QCLAB_poster.jpg>>

%% Householder Prizes
% The Alston S. Householder Prize is awarded to the author of
% the best dissertation in numerical linear algebra 
% submitted over the previous three years.
% This time there were two prize-winning submissions
% described in a special plenary session on Thursday evening.
% 
% Alice Cortinovis from the University of Pisa
% won the prize for a dissertation
% supervised by Daniel Kressner from the
% Swiss Federal Institute of Technology in Lausanne.
%
% <<Alice.png>>
%
% Jorge Garza-Vargas from Caltech and 
% Jess Banks from U. C. Berkeley shared
% a second prize for a pair of dissertations
% supervised by Nikhil Srivastava from Berkeley.
% Jorge gave the talk.
%
% <<Jorge.png>>
%

%% Excursion
% A tradition at the seminars is the Wednesday afternoon excursion.
% This year we had the choice of a serious hike, an easy walk,
% a visit to a nearby winery, or a nap at the hotel.  The walk was on
% the Gorge trail in Taughannock Falls State Park and was fabulous.
%
% <<Taughannock.png>>

%% Grüezi
% Grüezi is Swiss German for Hello.  Anyone planning to attend
% the Householder seminar in 2028 should learn how to pronounce
% Grüezi.
% The seminar will be in Pontresina, Switzerland.
% Bart Vandereycken made the announcement.
%
% <<Pontresina.png>>
%
% Pontresina was also the site for the Householder seminar in 1996.
% The Wednesday excursion at that meeting was a hike down the Morteratsch
% glacier at Diavolezza.
% 
% <<Glacier.png>>
%

%% Thanks
% Thanks to Erik De Sturle for several of these photos.

##### SOURCE END ##### 3fc25520ada249c38d629067b3d5dc17
-->]]></content><author><name>MathWorks Blogs</name></author><category term="mathworks" /><summary type="html"><![CDATA[The twenty-second Householder Symposium on Numerical Linear Algebra was held June 8 - June 13 at Cornell. The local organizers were Anil Damle, Alex Townsend and David Bindel. Anil served as host and cheerleader.]]></summary></entry><entry><title type="html">A Million Dollar Matrix</title><link href="https://hpc.social/commercial-blog/2025/a-million-dollar-matrix/" rel="alternate" type="text/html" title="A Million Dollar Matrix" /><published>2025-06-12T20:32:59-06:00</published><updated>2025-06-12T20:32:59-06:00</updated><id>https://hpc.social/commercial-blog/2025/a-million-dollar-matrix</id><content type="html" xml:base="https://hpc.social/commercial-blog/2025/a-million-dollar-matrix/"><![CDATA[<div class="content"><!--introduction-->
<p>The twenty-second Householder Symposium on Numerical Linear Algebra is this week, June 8 - June 13, 2025 at Cornell. My talk on Wednesday had the provocative title "A Million-Dollar Matrix". A PDF of the slides available at <a href="https://blogs.mathworks.com/cleve/files/HXXII.pdf">link_1</a>. The talk covers posts in the Cleve's Corner blog last fall. <a href="https://blogs.mathworks.com/cleve/2024/09/23/redheffer-mertens-and-one-million-dollars/">link_2</a>, <a href="https://blogs.mathworks.com/cleve/2024/09/27/redheffer-and-mertens-continued/">link_3</a>, <a href="https://blogs.mathworks.com/cleve/2024/09/30/redheffer-and-mertens-accelerated/">link_4</a>.</p>

<!--/introduction-->
<h3>Contents</h3>
<div>
<ul>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#25b2aace-84e9-4d9a-a27c-15d5539a37ad">Redheffer Matrix</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#993f7c88-74fd-4966-9744-f4de4727cefb">M&ouml;bius Function</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#7d219b38-27c3-4b59-a878-b38207378b02">Mertens Function</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#f3c157c6-623e-40a9-b49b-6875c174e6ee">Redheffer = Mertens</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#c6cc0275-d896-4240-878d-0b4526b1469c">Mertens Conjecture</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#7dd4489a-97fd-4d39-8241-3fcea4971a9b">Riemann Hypothesis</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#40745ff7-a37f-4842-86aa-25f0466f3025">Riemann Computations</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#4b7c91ee-a863-443f-9d89-949e74e4e76f">$1M</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#13d73959-3607-481b-9f91-0aa84ef5374d">Spoiler</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#48fabfd4-1898-452d-bf69-8ecad8633faf">Redheffer Matrix</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#a137a9e0-5a74-42e6-a581-2263656a7922">Eigenvalues</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#961b7e39-1b1c-4228-8efc-b933a413c337">Characteristic polynomial</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#720a334a-f1dd-4bcb-b9f0-b4a90b8cc462">Jordan Canonical Form</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#40944e0c-0e4d-40f7-af80-eb42f70047c0">Code</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#d3753176-600f-4555-8df8-79b0e1bd0041">Sparse Redheffer</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#c399ff75-6de0-431a-a7cf-0123a6b76cd4">Five Ways</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#d8f77259-0ebb-4c0f-83ba-045268e8f55e">Complexity</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#42aa9cf9-a26a-4397-87ea-76deefa34f22">Timing</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#484631b3-76b0-4785-8239-045c0efe4492">References</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#33b645c0-16b0-4849-88e1-05e50cb538c2">Thanks</a>
</li>
</ul>
</div>

<h4>Redheffer Matrix<a name="25b2aace-84e9-4d9a-a27c-15d5539a37ad"></a>
</h4>
<p>Ray Redheffer (1921-2005) was a professor of mathematics at UCLA from 1950 until 2000. The Redheffer matrix, which he introduced in 1977, is n-by-n, with elements</p>

<pre>   R(k,j) = 1, if j = 1 or k divides j,
          = 0, otherwise</pre>
<p>Here is a <tt>spy</tt> plot for n = 64. The nonzero elements lie in the first column and on diagonals with integer-valued slopes.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/redheffer.png" vspace="5" /> </p>

<h4>M&ouml;bius Function<a name="993f7c88-74fd-4966-9744-f4de4727cefb"></a>
</h4>
<p>August M&ouml;bius (1790-1868) was an eminent 19th-century German mathematician. His M&ouml;bius function is a fundamental tool in the study of prime numbers.</p>

<pre>   mu(k) = 1 if k has an even number of distinct prime factors,
         = 0 if k has a repeated prime factor,
         = -1 if k has an odd number of distinct prime factors</pre>
<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/mobius.png" vspace="5" /> </p>

<h4>Mertens Function<a name="7d219b38-27c3-4b59-a878-b38207378b02"></a>
</h4>
<p>Franz Mertens (1840-1927) was born in the Grand Duchy of Posen in the Kingdom of Prussia, which is now Poland. He lived much his life in Vienna, Austria. The Mertens function is the cumulative sum of the M&ouml;bius function.</p>

<p>$$ M(n) = \sum_{k = 1}^{n} \mu(k) $$</p>

<p>M(n) is a running count of the integers that have an even number of prime factors, minus those with an odd number of prime factors.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/mertens.png" vspace="5" /> </p>

<h4>Redheffer = Mertens<a name="f3c157c6-623e-40a9-b49b-6875c174e6ee"></a>
</h4>
<p>The determinant of the Redheffer matrix is equal to the Mertens function.</p>

<p>
<b>det(R(n)) = M(n)</b>
</p>

<p>Plots of M(n) are also plots of det(R(n)).</p>

<h4>Mertens Conjecture<a name="c6cc0275-d896-4240-878d-0b4526b1469c"></a>
</h4>
<p>How fast does M(n) grow as n increases? Here are plots of M(n) for n in powers of 10 from n = 10 to n = 10^8, together with plots of sqrt(n) and -sqrt(n).</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/mertens2x4.png" vspace="5" /> </p>

<p>We see that, at least for n &lt; 10^8,</p>

<pre>   |M(n)| &lt; &radic;n</pre>
<p>The Mertens conjecture is that this inequality holds for all n as n &rarr; &infin;. This conjecture is of interest because it implies the Riemann hypothesis.</p>

<h4>Riemann Hypothesis<a name="7dd4489a-97fd-4d39-8241-3fcea4971a9b"></a>
</h4>
<p>The Riemann hypothesis has been called the &ldquo;Most important unsolved problem in mathematics". Its resolution is the objective of a Clay Millenium Prize valued at one-million dollars. The hypothesis, proposed by G. F. Bernard Riemann in 1859, concerns the zeta function ζ(z) and the location of its zeros.</p>

<h4>Riemann Computations<a name="40745ff7-a37f-4842-86aa-25f0466f3025"></a>
</h4>
<p>Computation of the first N non-trivial zeros of ζ(s).</p>

<pre>                authors                    year                     N
   ____________________________________    ____    __________________
   Riemann                                 1854                     ?
   Gram                                    1903                    10
   Backlund                                1914                    79
   Hutchinson                              1925                   138
   Titchmarsh                              1936                 1,041
   Turing                                  1953                 1,104
   Lehmer                                  1956                25,000
   Meller                                  1958                35,337
   Lehman                                  1966               250,000
   Rosser, Yohe, Schoenfield               1969             3,502,500
   Brent                                   1977            40,000,000
   Brent                                   1979            81,000,001
   Brent, Van_de_Lune, Te_Riele, Winter    1982           200,000,001
   Van_de_Lune, Te_Riele, Winter           1986         1,500,000,001
   Van_de_Lune                             2001       100,000,000,000
   Wedeniwski                              2003       250,000,000,000
   Gourdon                                 2004    10,000,000,000,000</pre>
<h4>$1M<a name="4b7c91ee-a863-443f-9d89-949e74e4e76f"></a>
</h4>
<p>The Mertens conjecture</p>

<pre>  |M(n)| &lt; &radic;n</pre>
<p>implies the Riemann hypothesis and is worth $1M.</p>

<p>So, a proof that</p>

<pre>  |det(R(n)| &lt; &radic;n</pre>
<p>would earn R the title "Million-Dollar Matrix".</p>

<h4>Spoiler<a name="13d73959-3607-481b-9f91-0aa84ef5374d"></a>
</h4>
<p>The Mertens conjecture is false.</p>

<p>Andrew Odlyzko and Herman te Riele (1985) prove</p>

<pre>  limsup n&rarr;&infin; M(n)/&radic;n &gt; 1.06</pre>
<p>This proves the existence of infinitely many values of <tt>n</tt> for which</p>

<pre>  |det(R(n))| &gt; 1.06 &radic;n</pre>
<p>The proof is indirect. Nobody knows an actual value of <tt>n</tt>. Estimates are</p>

<pre>  n &gt;&gt; 10^30</pre>
<h4>Redheffer Matrix<a name="48fabfd4-1898-452d-bf69-8ecad8633faf"></a>
</h4>
<p>Even though it is not worth a million dollars, Nick Higham included the Redheffer matrix in the original MATLAB <tt>gallery</tt>. The command</p>

<pre>  help private/redheff</pre>
<p>says</p>

<pre>  A has N-FLOOR(LOG2(N))-1 eigenvalues equal to 1,
  a real eigenvalue approximately SQRT(N),
  a negative eigenvalue approximately -SQRT(N),
  and the remaining eigenvalues are provably "small".</pre>
<p>For n = 64, this becomes</p>

<pre>  R(64) has 57 eigenvalues equal to 1,
  a real eigenvalue approximately 8.0,
  a negative eigenvalue approximately -8.0,
  and the remaining eigenvalues are provably "small".</pre>
<h4>Eigenvalues<a name="a137a9e0-5a74-42e6-a581-2263656a7922"></a>
</h4>
<p>The eigenvalues of R(64) are</p>

<pre>   eig(redheffer(64))</pre>
<pre>   10.0445 + 0.0000i
   -5.5442 + 0.0000i
    0.0726 + 0.0000i
    0.3213 + 0.4487i
    0.3213 - 0.4487i
    0.8923 + 0.1262i
    0.8923 - 0.1262i</pre>
<pre>   followed by</pre>
<pre>    1.0000 + 0.0000i</pre>
<pre>   repeated 57 times.</pre>
<h4>Characteristic polynomial<a name="961b7e39-1b1c-4228-8efc-b933a413c337"></a>
</h4>
<p>The characteristic polynomial of R(64) is</p>

<pre>  p(z) * (z &ndash; 1)^57</pre>
<p>where</p>

<pre>  p(z) = z^7 - 7^z^6 - 42*z^5 + 127*z^4 - 130*z^3 + 67*z^2 - 18*z + 1</pre>
<h4>Jordan Canonical Form<a name="720a334a-f1dd-4bcb-b9f0-b4a90b8cc462"></a>
</h4>
<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/jcf64.png" vspace="5" /> </p>

<h4>Code<a name="40944e0c-0e4d-40f7-af80-eb42f70047c0"></a>
</h4>
<pre class="codeinput">type<span class="string">mobius.m</span>
</pre>
<pre class="codeoutput">
function mu = mobius(n)
    % mu = mobius(n)
    mu = ones(1,n);
    mu(1) = -1;
    for p = primes(n)
        mu(p^2:p^2:n) = 0;
        mu(p:p:n) = -mu(p:p:n);
    end
end
</pre>
<pre class="codeinput">type<span class="string">mertens.m</span>
</pre>
<pre class="codeoutput">
function M = mertens(n)
    % M = mertens(n)
    mu = mobius(n);
    M = cumsum([1 mu(2:n)]);
end
</pre>
<pre class="codeinput">type<span class="string">redheffer.m</span>
</pre>
<pre class="codeoutput">
function R = redheffer(n)
    % R = redheffer(n)
    k = 1:n;
    R = mod(k,k') == 0;
    R(:,1) = 1;
    R = double(R);
end
</pre>
<pre class="codeinput">type<span class="string">sparse_redheffer.m</span>
</pre>
<pre class="codeoutput">
function S = sparse_redheffer(n)
    % S = sparse_redheffer(n)
    j(1:n) = (1:n)';
    k(1:n) = 1;
    m = n;
    for i = 2:n
        t = [1 i:i:n]';
        p = length(t);
        j(m+(1:p)) = t;
        k(m+(1:p)) = i;
        m = m+p;
    end
    S = sparse(k,j,1,n,n);
end
</pre>
<h4>Sparse Redheffer<a name="d3753176-600f-4555-8df8-79b0e1bd0041"></a>
</h4>
<pre>     n    tictoc            bytes            nnz      sparsity      det    |det|/&radic;n
  10^1     0.000              664             36     0.3600000       -1      0.316
  10^2     0.000           10,104            581     0.0581000        1      0.100
  10^3     0.003          137,096          8,068     0.0080680        2      0.063
  10^4     0.021        1,738,680        103,667     0.0010367      -23      0.230
  10^5     0.216       21,067,992      1,266,749     0.0001267      -48      0.152
  10^6     2.515      247,520,536     14,970,033     0.0000150      212      0.212
  10^7    32.429    2,843,605,816    172,725,363     0.0000017     1037      0.328</pre>
<h4>Five Ways<a name="c399ff75-6de0-431a-a7cf-0123a6b76cd4"></a>
</h4>
<pre class="codeinput">type<span class="string">fiveways</span>
</pre>
<pre class="codeoutput">
function M = fiveways(n)
    % Five Ways to Compute the Mertens/Redheffer Function 
    %1 
        R = redheffer(n);
        M(1) = det(R);
    %2 
        R =  sparse_redheffer(n);
        [L,U,P,Q] = lu(R);
        M(2) = det(L)*det(U)*det(P)*det(Q);
    %3
        R =  sparse_redheffer(n);
        R(:,[1 n]) = R(:,[n 1]);
        M(3) = -det(R);
    %4
        R =  sparse_redheffer(n);
        T = R(2:n,2:n);
        e = ones(1,n-1);
        M(4) = 1 - e*(T\e');
    %5 
        mu = mobius(n);
        cmu = cumsum([1 mu(2:end)]);
        M(5) = cmu(n);
end   
</pre>
<h4>Complexity<a name="d8f77259-0ebb-4c0f-83ba-045268e8f55e"></a>
</h4>
<pre>     redheffer function  dets  complexity      M</pre>
<pre>  #1 full      gallery     1   n^3             1
  #2 sparse    lu          4   n*log(n)^2      1
  #3 sparse    swap        1   n*log(n)^2      1
  #4 sparse    \           0   n*log(n)        1
  #5 none      primes      0   n*log(log(n))  many</pre>
<h4>Timing<a name="42aa9cf9-a26a-4397-87ea-76deefa34f22"></a>
</h4>
<pre>         2e4     2e5     2e6     2e7</pre>
<pre>   #1   26.33     -       -       -
   #2    0.36   21.53     -       -
   #3    0.08    1.29   16.71     -
   #4    0.05    0.57    6.32   70.85
   #5    0.01    0.03    0.27    3.18</pre>
<pre>               Time (seconds)</pre>
<h4>References<a name="484631b3-76b0-4785-8239-045c0efe4492"></a>
</h4>
<div>
<ul>
<li>M&ouml;bius (1832), Journal f&uuml;r die reine und angewandte Mathematik.9:105&ndash;123.</li>
<li>Riemann (1859), "Ueber die Anzahl der Primzahlen unter einer gegebenen Gr&ouml;sse", Monatsberichte der Berliner Akademie (1892).</li>
<li>Mertens (1897), Akademie Wissenschaftlicher Wien Mathematik-Naturlich, IIA.106:761&ndash;830.</li>
<li>Redheffer (1977), Numerische Methoden bei Optimierungsaufgaben, Band 3: 213&ndash;216.</li>
<li>Odlyzko &amp; te Riele (1985), Journal f&uuml;r die reine und angewandte Mathematik 357: 138&ndash;160.</li>
<li>Barrett &amp; Jarvis (1992), Linear Algebra and Its Applications: 162&ndash;164.</li>
<li>Borwein (2009), <a href="https://www.cecm.sfu.ca/~pborwein/course/math08/lecture.pdf">https://www.cecm.sfu.ca/~pborwein/course/math08/lecture.pdf</a>
</li>
</ul>
</div>

<h4>Thanks<a name="33b645c0-16b0-4849-88e1-05e50cb538c2"></a>
</h4>
<div>
<ul>
<li>Tim Davis</li>
<li>John Gilbert</li>
<li>Pat Quillen</li>
<li>Steve Lord</li>
<li>Jan van Lent</li>
<li>Frank Stenger</li>
<li>Claude</li>
</ul>
</div>

<!-- 
    function grabCode_e40ab05a928f42b9956d24c156a2b00f() {
        // Remember the title so we can use it in the new page
        title = document.title;

        // Break up these strings so that their presence
        // in the Javascript doesn't mess up the search for
        // the MATLAB code.
        t1='e40ab05a928f42b9956d24c156a2b00f ' + '##### ' + 'SOURCE BEGIN' + ' #####';
        t2='##### ' + 'SOURCE END' + ' #####' + ' e40ab05a928f42b9956d24c156a2b00f';
    
        b=document.getElementsByTagName('body')[0];
        i1=b.innerHTML.indexOf(t1)+t1.length;
        i2=b.innerHTML.indexOf(t2);
 
        code_string = b.innerHTML.substring(i1, i2);
        code_string = code_string.replace(/REPLACE_WITH_DASH_DASH/g,'--');

        // Use /x3C/g instead of the less-than character to avoid errors 
        // in the XML parser.
        // Use '\x26#60;' instead of '<' so that the XML parser
        // doesn't go ahead and substitute the less-than character. 
        code_string = code_string.replace(/\x3C/g, '\x26#60;');

        copyright = 'Copyright 2025 The MathWorks, Inc.';

        w = window.open();
        d = w.document;
        d.write('<pre>\n');
        d.write(code_string);

        // Add copyright line at the bottom if specified.
        if (copyright.length > 0) {
            d.writeln('');
            d.writeln('%%');
            if (copyright.length > 0) {
                d.writeln('% _' + copyright + '_');
            }
        }

        d.write('</pre>\n');

        d.title = title + ' (MATLAB code)';
        d.close();
    }   
     -->
<p style="text-align: right; font-size: xx-small; font-weight: lighter; font-style: italic; color: gray;">
<br />
<a href=""><span style="font-size: x-small; font-style: italic;">Get 
      the MATLAB code <noscript>(requires JavaScript)</noscript>
</span></a>
<br />
<br />
      Published with MATLAB&reg; R2024b<br />
</p>

</div>

<!--
e40ab05a928f42b9956d24c156a2b00f ##### SOURCE BEGIN #####
    %% My Talk at Householder XXII
% The twenty-second Householder Symposium on 
% Numerical Linear Algebra is this week,
% June 8 - June 13, 2025 at Cornell.
% My talk on Wednesday had the provocative title
% "A Million-Dollar Matrix".
% A PDF of the slides available at
% <https://blogs.mathworks.com/cleve/files/HXXII.pdf
% link_1>.
% The talk covers posts in the Cleve's Corner blog last fall.
% <https://blogs.mathworks.com/cleve/2024/09/23/redheffer-mertens-and-one-million-dollars/
% link_2>,
% <https://blogs.mathworks.com/cleve/2024/09/27/redheffer-and-mertens-continued/
% link_3>,
% <https://blogs.mathworks.com/cleve/2024/09/30/redheffer-and-mertens-accelerated/
% link_4>.

%% Redheffer Matrix
% Ray Redheffer (1921-2005) was a professor of mathematics
% at UCLA from 1950 until 2000.  The Redheffer matrix, which
% he introduced in 1977, is n-by-n, with elements
%
%     R(k,j) = 1, if j = 1 or k divides j,
%            = 0, otherwise
%
% Here is a |spy| plot for n = 64.  The nonzero elements lie
% in the first column and on diagonals with integer-valued slopes.
% 
% <<redheffer.png>>
%

%% Möbius Function 
% August Möbius (1790-1868) was an eminent 19th-century German
% mathematician.  His Möbius function is a fundamental tool in
% the study of prime numbers.
% 
%     mu(k) = 1 if k has an even number of distinct prime factors,
%           = 0 if k has a repeated prime factor,
%           = -1 if k has an odd number of distinct prime factors
%
% <<mobius.png>>
%

%% Mertens Function
% Franz Mertens (1840-1927) was born in the Grand Duchy of Posen
% in the Kingdom of Prussia, which is now Poland.  He lived much
% his life in Vienna, Austria.  The Mertens function is the
% cumulative sum of the Möbius function.
%
% $$ M(n) = \sum_{k = 1}^{n} \mu(k) $$
%
% M(n) is a running count of the integers that have
% an even number of prime factors, minus those with
% an odd number of prime factors.
%
% <<mertens.png>>
%

%% Redheffer = Mertens
% The determinant of the Redheffer matrix is equal to the Mertens
% function.
%
% *det(R(n)) = M(n)*
%
% Plots of M(n) are also plots of det(R(n)).

%% Mertens Conjecture
% How  fast does M(n) grow as n increases?
% Here are plots of M(n) for n in powers of 10 from n = 10 to n = 10^8,
% together with plots of sqrt(n) and -sqrt(n). 
%
% <<mertens2x4.png>>
%

%%
% We see that, at least for n < 10^8,
%
%     |M(n)| < √n
%
% The Mertens conjecture is that this inequality holds for all n as n → ∞.
% This conjecture is of interest because it
% implies the Riemann hypothesis.

%% Riemann Hypothesis
% The Riemann hypothesis has been called the “Most important unsolved 
% problem in mathematics".  Its resolution is the objective of a
% Clay Millenium Prize valued at one-million dollars.
% The hypothesis, proposed by G. F. Bernard Riemann in 1859,
% concerns the zeta function ζ(z) and the location of its zeros.
%

%% Riemann Computations
% Computation of the first N non-trivial zeros of ζ(s).
%
%                  authors                    year                     N       
%     ____________________________________    ____    __________________
%     Riemann                                 1854                     ?
%     Gram                                    1903                    10
%     Backlund                                1914                    79
%     Hutchinson                              1925                   138
%     Titchmarsh                              1936                 1,041
%     Turing                                  1953                 1,104
%     Lehmer                                  1956                25,000
%     Meller                                  1958                35,337
%     Lehman                                  1966               250,000
%     Rosser, Yohe, Schoenfield               1969             3,502,500
%     Brent                                   1977            40,000,000
%     Brent                                   1979            81,000,001
%     Brent, Van_de_Lune, Te_Riele, Winter    1982           200,000,001
%     Van_de_Lune, Te_Riele, Winter           1986         1,500,000,001
%     Van_de_Lune                             2001       100,000,000,000
%     Wedeniwski                              2003       250,000,000,000
%     Gourdon                                 2004    10,000,000,000,000

%% $1M
% The Mertens conjecture
%
%    |M(n)| < √n
%
% implies the Riemann hypothesis and is worth $1M. 
%
% So, a proof that
%
%    |det(R(n)| < √n
%
% would earn R the title "Million-Dollar Matrix".

%% Spoiler
% The Mertens conjecture is false.
%
% Andrew Odlyzko and Herman te Riele (1985) prove
%
%    limsup n→∞ M(n)/√n > 1.06
%
% This proves the existence of infinitely many values
% of |n| for which
%
%    |det(R(n))| > 1.06 √n
%
% The proof is indirect.  Nobody knows an actual value of |n|.
% Estimates are 
%
%    n >> 10^30
%

%% Redheffer Matrix
% Even though it is not worth a million dollars,
% Nick Higham included the Redheffer matrix in the original
% MATLAB |gallery|. The command
%
%    help private/redheff
% 
% says
%
%    A has N-FLOOR(LOG2(N))-1 eigenvalues equal to 1,
%    a real eigenvalue approximately SQRT(N),
%    a negative eigenvalue approximately -SQRT(N),
%    and the remaining eigenvalues are provably "small".
%
% For n = 64, this becomes
%
%    R(64) has 57 eigenvalues equal to 1,
%    a real eigenvalue approximately 8.0,
%    a negative eigenvalue approximately -8.0,
%    and the remaining eigenvalues are provably "small".
%

%% Eigenvalues
% The eigenvalues of R(64) are
%
%     eig(redheffer(64))
%   
%     10.0445 + 0.0000i
%     -5.5442 + 0.0000i
%      0.0726 + 0.0000i
%      0.3213 + 0.4487i
%      0.3213 - 0.4487i
%      0.8923 + 0.1262i
%      0.8923 - 0.1262i  
%
%     followed by
%
%      1.0000 + 0.0000i
%
%     repeated 57 times.
%

%% Characteristic polynomial
% The characteristic polynomial of R(64) is
% 
%    p(z) * (z – 1)^57
%
% where 
%
%    p(z) = z^7 - 7^z^6 - 42*z^5 + 127*z^4 - 130*z^3 + 67*z^2 - 18*z + 1
%

%% Jordan Canonical Form
%
% <<jcf64.png>>


%% Code
%
    type mobius.m

%%
%
    type mertens.m

%%
%
    type redheffer.m

%%
%
    type sparse_redheffer.m

%% Sparse Redheffer
%  
%       n    tictoc            bytes            nnz      sparsity      det    |det|/√n
%    10^1     0.000              664             36     0.3600000       -1      0.316
%    10^2     0.000           10,104            581     0.0581000        1      0.100
%    10^3     0.003          137,096          8,068     0.0080680        2      0.063
%    10^4     0.021        1,738,680        103,667     0.0010367      -23      0.230
%    10^5     0.216       21,067,992      1,266,749     0.0001267      -48      0.152
%    10^6     2.515      247,520,536     14,970,033     0.0000150      212      0.212
%    10^7    32.429    2,843,605,816    172,725,363     0.0000017     1037      0.328
%        

%% Five Ways
%
    type fiveways
  
%% Complexity

%%
%
%       redheffer function  dets  complexity      M
%
%    #1 full      gallery     1   n^3             1
%    #2 sparse    lu          4   n*log(n)^2      1
%    #3 sparse    swap        1   n*log(n)^2      1
%    #4 sparse    \           0   n*log(n)        1
%    #5 none      primes      0   n*log(log(n))  many

%% Timing

%%
%           2e4     2e5     2e6     2e7
%
%     #1   26.33     -       -       -
%     #2    0.36   21.53     -       -
%     #3    0.08    1.29   16.71     -
%     #4    0.05    0.57    6.32   70.85
%     #5    0.01    0.03    0.27    3.18
%
%                 Time (seconds)

%% References
%
% * Möbius (1832), Journal für die reine und angewandte Mathematik.9:105–123.
% * Riemann (1859), "Ueber die Anzahl der Primzahlen unter einer gegebenen Grösse",
%   Monatsberichte der Berliner Akademie (1892).
% * Mertens (1897), Akademie Wissenschaftlicher Wien Mathematik-Naturlich, IIA.106:761–830.
% * Redheffer (1977), Numerische Methoden bei Optimierungsaufgaben, Band 3: 213–216.
% * Odlyzko & te Riele (1985), Journal für die reine und angewandte Mathematik 357: 138–160.
% * Barrett & Jarvis (1992), Linear Algebra and Its Applications: 162–164.
% * Borwein (2009), https://www.cecm.sfu.ca/~pborwein/course/math08/lecture.pdf

%% Thanks
% * Tim Davis
% * John Gilbert
% * Pat Quillen
% * Steve Lord
% * Jan van Lent
% * Frank Stenger
% * Claude
##### SOURCE END ##### e40ab05a928f42b9956d24c156a2b00f
-->]]></content><author><name>MathWorks Blogs</name></author><category term="mathworks" /><summary type="html"><![CDATA[The twenty-second Householder Symposium on Numerical Linear Algebra is this week, June 8 - June 13, 2025 at Cornell. My talk on Wednesday had the provocative title "A Million-Dollar Matrix". A PDF of the slides available at link_1. The talk covers posts in the Cleve's Corner blog last fall. link_2, link_3, link_4.]]></summary></entry><entry><title type="html">Revolving Century Puzzle and Magic Squares</title><link href="https://hpc.social/commercial-blog/2025/revolving-century-puzzle-and-magic-squares/" rel="alternate" type="text/html" title="Revolving Century Puzzle and Magic Squares" /><published>2025-05-11T14:53:11-06:00</published><updated>2025-05-11T14:53:11-06:00</updated><id>https://hpc.social/commercial-blog/2025/revolving-century-puzzle-and-magic-squares</id><content type="html" xml:base="https://hpc.social/commercial-blog/2025/revolving-century-puzzle-and-magic-squares/"><![CDATA[<div class="content"><!--introduction-->
<p>The Revolving Century puzzle is a beautifully made wooden puzzle from <a href="https://www.creativecrafthouse.com/">Creative Crafthouse</a> in Hudson, Florida.</p>

<p>The sum of the numbers on each of the six rotating puzzle pieces is 100. The goal is to rotate the pieces so that the sum for each of the six columns is also 100. It is like a circular 6-by-6 magic square.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/start.png" vspace="5" /> </p>

<!--/introduction-->
<h3>Contents</h3>
<div>
<ul>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#370f5ced-4a82-475a-a76b-65fd1b2a7bb7">Digital Version</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#c1a4a056-9449-4e06-b815-9d6a39b356bb">State</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#89c70e0c-1c00-487f-9231-5089993f00c4">Move</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#e7b4e63f-911d-498e-b8d5-7db3f9ebb8b7">Search</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#5bf0e80f-113f-44e0-8c18-fbd782201f99">Magic</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#a233dce1-c8e7-4952-9d4f-e1c668c44e38">Solution</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#c80f5fc6-c4ef-4d9f-b617-4d868c466333">Software</a>
</li>
</ul>
</div>

<h4>Digital Version<a name="370f5ced-4a82-475a-a76b-65fd1b2a7bb7"></a>
</h4>
<p>Our digital version of the Revolving Century puzzle uses 36 <a href="https://blogs.mathworks.com/cleve/2022/08/21/polygons-polyshapes-and-puzzles/">polyshapes</a> like this one.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/piece19.png" vspace="5" /> </p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/m_start.png" vspace="5" /> </p>

<p>The pieces are numbered with the integers from zero to 35, except the piece numbered 30 has been replaced by a second zero. This gives the desired "century" sum.</p>

<pre class="codeinput">
   v = 0:35;
   v(v==30) = 0;
   c = sum(v)/6
</pre>
<pre class="codeoutput">
   c =
      100
</pre>
<h4>State<a name="c1a4a056-9449-4e06-b815-9d6a39b356bb"></a>
</h4>
<p>The state of the puzzle is described by a 6-by-6 matrix.</p>

<pre class="codeinput"> 
   A = start
</pre>
<pre class="codeoutput">
   A =
        1     4    25    29     6    35
       18     5    34    33     0    10
       19    24     2    26     8    21
       28    13    32     0    11    16
       12    14    23     7    27    17
       15    20    22    31     3     9
</pre>
<p>The row sums are all equal, but the column sums are not.</p>

<pre class="codeinput">
   rows = sum(A')
   cols = sum(A)
</pre>
<pre class="codeoutput">
   rows =
      100   100   100   100   100   100
   cols =
       93    80   138   126    55   108
</pre>
<h4>Move<a name="89c70e0c-1c00-487f-9231-5089993f00c4"></a>
</h4>
<p>A puzzle move rotates one row of the state matrix, for example, the third row.</p>

<pre class="codeinput">
   shift = [2:6 1];
   r = 3;
   A
   A(r,:) = A(r,shift)
</pre>
<pre class="codeoutput">
   A =
        1     4    25    29     6    35
       18     5    34    33     0    10
       19    24     2    26     8    21
       28    13    32     0    11    16
       12    14    23     7    27    17
       15    20    22    31     3     9
  A =
        1     4    25    29     6    35
       18     5    34    33     0    10
       24     2    26     8    21    19
       28    13    32     0    11    16
       12    14    23     7    27    17
       15    20    22    31     3     9
</pre>
<p>Since we have a computer handy, we can also track the column sums.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/piece19.gif" vspace="5" /> </p>

<h4>Search<a name="e7b4e63f-911d-498e-b8d5-7db3f9ebb8b7"></a>
</h4>
<p>The only way to find a solution that I know of is an exhaustive search. There are only <tt>6^5 = 7776</tt> possible states. It takes 4787 steps and less than a tenth of a second on my laptop to find the solution.</p>

<p>Here are the last few steps of the exhaustive search for a solution.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/polypuzzle.gif" vspace="5" /> </p>

<h4>Magic<a name="5bf0e80f-113f-44e0-8c18-fbd782201f99"></a>
</h4>
<p>I could have used an actual magic square.</p>

<pre class="codeinput">
   A = magic(6)
</pre>
<pre class="codeoutput">
   A =
       35     1     6    26    19    24
        3    32     7    21    23    25
       31     9     2    22    27    20
        8    28    33    17    10    15
       30     5    34    12    14    16
        4    36    29    13    18    11
</pre>
<p>I would need to change the name of the puzzle to "Revolution 111".</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/magic6.gif" vspace="5" /> </p>

<h4>Solution<a name="a233dce1-c8e7-4952-9d4f-e1c668c44e38"></a>
</h4>
<p>Here is the solution of the original Revolution Century puzzle.</p>

<pre class="codeinput">
   A = solution
</pre>
<pre class="codeoutput">
   A =
       25    29     6    35     1     4
       33     0    10    18     5    34
       21    19    24     2    26     8
       11    16    28    13    32     0
        7    27    17    12    14    23
        3     9    15    20    22    31
</pre>
<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/m_solution.png" vspace="5" /> </p>

<p>I can transfer that to the analog puzzle.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/solution.png" vspace="5" /> </p>

<h4>Software<a name="c80f5fc6-c4ef-4d9f-b617-4d868c466333"></a>
</h4>
<p>A self-extracting archive for <tt>polypuzzle</tt> is available <a href="https://blogs.mathworks.com/cleve/files/Puzzle_mzip.m">here</a>.</p>

<!-- 
    function grabCode_f1d26faf2b644b55b95e3995bb8d7cdb() {
        // Remember the title so we can use it in the new page
        title = document.title;

        // Break up these strings so that their presence
        // in the Javascript doesn't mess up the search for
        // the MATLAB code.
        t1='f1d26faf2b644b55b95e3995bb8d7cdb ' + '##### ' + 'SOURCE BEGIN' + ' #####';
        t2='##### ' + 'SOURCE END' + ' #####' + ' f1d26faf2b644b55b95e3995bb8d7cdb';
    
        b=document.getElementsByTagName('body')[0];
        i1=b.innerHTML.indexOf(t1)+t1.length;
        i2=b.innerHTML.indexOf(t2);
 
        code_string = b.innerHTML.substring(i1, i2);
        code_string = code_string.replace(/REPLACE_WITH_DASH_DASH/g,'--');

        // Use /x3C/g instead of the less-than character to avoid errors 
        // in the XML parser.
        // Use '\x26#60;' instead of '<' so that the XML parser
        // doesn't go ahead and substitute the less-than character. 
        code_string = code_string.replace(/\x3C/g, '\x26#60;');

        copyright = 'Copyright 2025 The MathWorks, Inc.';

        w = window.open();
        d = w.document;
        d.write('<pre>\n');
        d.write(code_string);

        // Add copyright line at the bottom if specified.
        if (copyright.length > 0) {
            d.writeln('');
            d.writeln('%%');
            if (copyright.length > 0) {
                d.writeln('% _' + copyright + '_');
            }
        }

        d.write('</pre>\n');

        d.title = title + ' (MATLAB code)';
        d.close();
    }   
     -->
<p style="text-align: right; font-size: xx-small; font-weight: lighter; font-style: italic; color: gray;">
<br />
<a href=""><span style="font-size: x-small; font-style: italic;">Get 
      the MATLAB code <noscript>(requires JavaScript)</noscript>
</span></a>
<br />
<br />
      Published with MATLAB&reg; R2024b<br />
</p>

</div>

<!--
f1d26faf2b644b55b95e3995bb8d7cdb ##### SOURCE BEGIN #####
%% Revolving Century Puzzle and Magic Squares
% The Revolving Century puzzle is a beautifully made wooden puzzle
% from <https://www.creativecrafthouse.com/ Creative Crafthouse>
% in Hudson, Florida.
%
% The sum of the numbers on each of the six rotating puzzle
% pieces is 100.  The goal is to rotate the pieces so that
% the sum for each of the six columns is also 100.  It is like 
% a circular 6-by-6 magic square.
%
% <<start.png>>
%

%% Digital Version
% Our digital version of the Revolving Century puzzle uses 36  
% <https://blogs.mathworks.com/cleve/2022/08/21/polygons-polyshapes-and-puzzles/
% polyshapes> like this one.
%
% <<piece19.png>>
%
% <<m_start.png>>
%

%%
% The pieces are numbered with the integers from zero to 35, except
% the piece numbered 30 has been replaced by a second zero. 
% This gives the desired "century" sum. 
 
    v = 0:35;
    v(v==30) = 0; 
    c = sum(v)/6

%% State
% The state of the puzzle is described by a 6-by-6 matrix.

    A = start

%%
% The row sums are all equal, but the column sums are not.

    rows = sum(A')
    cols = sum(A)

%% Move
% A puzzle move rotates one row of the state matrix,
% for example, the third row.

    shift = [2:6 1];
    r = 3;
    A
    A(r,:) = A(r,shift)

%%
% Since we have a computer handy, we can also track the column sums.
%
% <<piece19.gif>>
%

%% Search
% The only way to find a solution that I know of is
% an exhaustive search.  There are only |6^5 = 7776|
% possible states.  
% It takes 4787 steps and less than a tenth of a second
% on my laptop to find the solution.
%
% Here are the last few steps of the exhaustive search
% for a solution.
% 
% <<polypuzzle.gif>>
%

%% Magic
% I could have used an actual magic square.

    A = magic(6)

%%
% I would need to change the name of the puzzle to "Revolution 111".
%
% <<magic6.gif>>
%

%% Solution
% Here is the solution of the original Revolution Century puzzle.

    A = solution

%%
% <<m_solution.png>>
%
% I can transfer that to the analog puzzle.
%
% <<solution.png>>
%

%% Software
% A self-extracting archive for |polypuzzle| is available
% <https://blogs.mathworks.com/cleve/files/Puzzle_mzip.m here>.
##### SOURCE END ##### f1d26faf2b644b55b95e3995bb8d7cdb
-->]]></content><author><name>MathWorks Blogs</name></author><category term="mathworks" /><summary type="html"><![CDATA[The Revolving Century puzzle is a beautifully made wooden puzzle from Creative Crafthouse in Hudson, Florida.]]></summary></entry><entry><title type="html">L-systems, Plants, Fractal Curves, Turtles and Dragons</title><link href="https://hpc.social/commercial-blog/2025/l-systems-plants-fractal-curves-turtles-and-dragons/" rel="alternate" type="text/html" title="L-systems, Plants, Fractal Curves, Turtles and Dragons" /><published>2025-05-03T15:09:59-06:00</published><updated>2025-05-03T15:09:59-06:00</updated><id>https://hpc.social/commercial-blog/2025/l-systems-plants-fractal-curves-turtles-and-dragons</id><content type="html" xml:base="https://hpc.social/commercial-blog/2025/l-systems-plants-fractal-curves-turtles-and-dragons/"><![CDATA[<div class="content"><!--introduction-->
<p>No, this is not the script for an episode of "Game of Thrones". It is a blog post about Lindenmayer grammars, growing plants, space-filling fractals, turtle graphics and dragon curves.</p>

<p>Here is the opening screen from our new program, MLogo.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/MLogo.png" vspace="5" /> </p>

<!--/introduction-->
<h3>Contents</h3>
<div>
<ul>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#e4c73f18-5203-41ab-aae7-29dfc3c677bc">L-systems</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#2b729287-e100-42ba-9e7f-ceab5a7a41a4">MLogo</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#fb091433-870d-4ce0-82f6-4310e751f537">Dragon Curve</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#984588f4-4cb8-4fa5-8978-ec6e07b244b2">Hilbert Curve</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#27758267-deb0-4d68-9287-7f7af46ef0ec">Gosper Fractal</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#164f12f3-6e87-42af-b4e5-b38dd5d03010">Algorithmic Beauty of Plants</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#b0adc2d3-245d-4aca-b9f1-6a19fc7af2f3">Software</a>
</li>
</ul>
</div>

<h4>L-systems<a name="e4c73f18-5203-41ab-aae7-29dfc3c677bc"></a>
</h4>
<p>Aristid Lindenmayer (1925-1989) was a Hungarian biologist and botanist at the University of Utrecht. In 1968 he introduced a formal grammar for string rewrite rules that can describe living plants, artificial fractals, and especially, artificial fractals that model living plants.</p>

<p>Lindenmayer's strings drive MLogo. A simple example is</p>

<pre>  R = @(s) replace(s,"A","A+A-A");</pre>
<p>If you start with</p>

<pre>  s = "A"</pre>
<p>and repeat</p>

<pre>  s = R(s)</pre>
<p>three times, the result is</p>

<pre>  A
  A+A-A
  A+A-A+A+A-A-A+A-A
  A+A-A+A+A-A-A+A-A+A+A-A+A+A-A-A+A-A-A+A-A+A+A-A-A+A-A</pre>
<h4>MLogo<a name="2b729287-e100-42ba-9e7f-ceab5a7a41a4"></a>
</h4>
<p>
<a href="https://en.wikipedia.org/wiki/Logo_(programming_language)">Logo</a> is a programming language, aimed at young students, developed in 1967 by MIT professors Wally Feurzeig, Seymour Papert, and Cynthia Solomon. Logo has been very influential, spawning hundreds of implementations and successors. MLogo, short for MATLAB Logo, is another successor.</p>

<p>A distinctive feature of Logo offprings is "turtle graphics". Basic Logo commands like <tt>step</tt>, <tt>turn</tt>, and <tt>draw</tt> drive a virtual tortoise, originally a motorized toy, and later a graphics cursor. Here is a sample with turtle driven by this Lindenmayer system.</p>

<pre>A step forward
+ turn left 90 degrees
- turn right 90 degrees</pre>
<pre>s = A+A-A-A+</pre>
<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/Turtle-2.gif" vspace="5" /> </p>

<h4>Dragon Curve<a name="fb091433-870d-4ce0-82f6-4310e751f537"></a>
</h4>
<p>The dragon space-filling fractal curve was invented by NASA physicist John Heighway and his colleagues and featured in Martin Gardner's <i>Scientific American</i> column in 1967. I made a <a href="https://blogs.mathworks.com/cleve/2018/04/06/the-dragon-curve">Cleve's Corner</a> posting about the dragon curve in 2018.</p>

<p>Here is MLogo's dragon.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/Dragon-1.gif" vspace="5" /> </p>

<p>Here is a frame from "Numberphile" video where Brady Haran visits <a href="https://www.youtube.com/watch?v=v678Em6qyzk">Don Knuth</a> and the unique ceramic tile dragon in his home.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/Knuth.png" vspace="5" /> </p>

<h4>Hilbert Curve<a name="984588f4-4cb8-4fa5-8978-ec6e07b244b2"></a>
</h4>
<p>
<a href="https://en.wikipedia.org/wiki/David_Hilbert">David Hilbert</a> (1862-1943), one of the most influential mathematicians of his era, introduced the space-filling fractal <a href="https://en.wikipedia.org/wiki/Hilbert_curve">Hilbert curve</a> in 1891.</p>

<p>Here is MLogo's Hilbert curve.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/Hilbert.gif" vspace="5" /> </p>

<p>Here is a crazy application of the Hilbert curve, Randall Munroe's view of Internet addresses in 2006, <a href="https://xkcd.com/195">https://xkcd.com/195</a>.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/xkcd.png" vspace="5" /> </p>

<p>
<a href="https://xkcd.com/195">https://xkcd.com/195</a>
</p>

<h4>Gosper Fractal<a name="27758267-deb0-4d68-9287-7f7af46ef0ec"></a>
</h4>
<p>
<a href="https://en.wikipedia.org/wiki/Bill_Gosper">Bill Gosper</a>, one of the original MIT "hackers", has made major contributions to Lisp and Macsyma, found the "glider gun" for Conway's Game of Life, and invented the Gosper fractal.</p>

<p>Here is MLogo's rendition.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/Gosper-1.gif" vspace="5" /> </p>

<p>Dragon Nerd creates jewelry from the Gosper curve and other fractals.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/DragonNerd.png" vspace="5" /> </p>

<p>
<a href="https://www.etsy.com/shop/DragonNerd">https://www.etsy.com/shop/DragonNerd</a>
</p>

<h4>Algorithmic Beauty of Plants<a name="164f12f3-6e87-42af-b4e5-b38dd5d03010"></a>
</h4>
<p>"The Algorithmic Beauty of Plants" is a beautiful book by Przemyslaw Prusinkiewicz and Aristid Lindenmayer, featuring over fifty color figures of computer-generated plants. The original book is available from <a href="https://link.springer.com/book/10.1007/978-1-4613-8476-2">Springer Nature</a>. A PDF version is available from <a href="https://algorithmicbotany.org/papers/#abop">AlgormicBotany</a> at the University of Calgary.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/abop.png" vspace="5" /> </p>

<p>This is MLogo's rendition of one small example.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/Plant-2.gif" vspace="5" /> </p>

<h4>Software<a name="b0adc2d3-245d-4aca-b9f1-6a19fc7af2f3"></a>
</h4>
<p>
<a href="https://blogs.mathworks.com/cleve/files/MLogo.m">https://blogs.mathworks.com/cleve/files/MLogo.m</a>
</p>

<!-- 
    function grabCode_038066df016b4e6685a8571703c3f9db() {
        // Remember the title so we can use it in the new page
        title = document.title;

        // Break up these strings so that their presence
        // in the Javascript doesn't mess up the search for
        // the MATLAB code.
        t1='038066df016b4e6685a8571703c3f9db ' + '##### ' + 'SOURCE BEGIN' + ' #####';
        t2='##### ' + 'SOURCE END' + ' #####' + ' 038066df016b4e6685a8571703c3f9db';
    
        b=document.getElementsByTagName('body')[0];
        i1=b.innerHTML.indexOf(t1)+t1.length;
        i2=b.innerHTML.indexOf(t2);
 
        code_string = b.innerHTML.substring(i1, i2);
        code_string = code_string.replace(/REPLACE_WITH_DASH_DASH/g,'--');

        // Use /x3C/g instead of the less-than character to avoid errors 
        // in the XML parser.
        // Use '\x26#60;' instead of '<' so that the XML parser
        // doesn't go ahead and substitute the less-than character. 
        code_string = code_string.replace(/\x3C/g, '\x26#60;');

        copyright = 'Copyright 2025 The MathWorks, Inc.';

        w = window.open();
        d = w.document;
        d.write('<pre>\n');
        d.write(code_string);

        // Add copyright line at the bottom if specified.
        if (copyright.length > 0) {
            d.writeln('');
            d.writeln('%%');
            if (copyright.length > 0) {
                d.writeln('% _' + copyright + '_');
            }
        }

        d.write('</pre>\n');

        d.title = title + ' (MATLAB code)';
        d.close();
    }   
     -->
<p style="text-align: right; font-size: xx-small; font-weight: lighter; font-style: italic; color: gray;">
<br />
<a href=""><span style="font-size: x-small; font-style: italic;">Get 
      the MATLAB code <noscript>(requires JavaScript)</noscript>
</span></a>
<br />
<br />
      Published with MATLAB&reg; R2024b<br />
</p>

</div>

<!--
038066df016b4e6685a8571703c3f9db ##### SOURCE BEGIN #####
%% L-systems, Plants, Fractal Curves, Turtles and Dragons
% No, this is not the script for an episode of "Game of Thrones".
% It is a blog post about
% Lindenmayer grammars, growing plants, space-filling fractals,
% turtle graphics and dragon curves.
%
% Here is the opening screen from our new program, MLogo.
%
% <<MLogo.png>>
%

%% L-systems
% Aristid Lindenmayer (1925-1989) was a Hungarian biologist and
% botanist at the University of Utrecht.  In 1968 he introduced a
% formal grammar for string rewrite rules that can describe  
% living plants, artificial fractals, and especially, artificial
% fractals that model living plants. 
%
% Lindenmayer's strings drive MLogo.  A simple example is
%
%    R = @(s) replace(s,"A","A+A-A");
%
% If you start with
%
%    s = "A"
%
% and repeat
%
%    s = R(s)
%
% three times, the result is
%
%    A
%    A+A-A
%    A+A-A+A+A-A-A+A-A
%    A+A-A+A+A-A-A+A-A+A+A-A+A+A-A-A+A-A-A+A-A+A+A-A-A+A-A
%

%% MLogo
% <https://en.wikipedia.org/wiki/Logo_(programming_language)
% Logo> is a programming language, aimed at young students,
% developed in 1967 by MIT professors Wally Feurzeig, Seymour Papert,
% and Cynthia Solomon.  Logo has been very influential, spawning
% hundreds of implementations and successors.  MLogo, short for
% MATLAB Logo, is another successor.
%
% A distinctive feature of Logo offprings is "turtle graphics".
% Basic Logo commands like |step|, |turn|, and |draw| drive a
% virtual tortoise, originally a motorized toy, and later a graphics 
% cursor.  Here is a sample with turtle driven by this
% Lindenmayer system. 
%
%  A step forward
%  + turn left 90 degrees
%  - turn right 90 degrees
%
%  s = A+A-A-A+ 
%
% <<Turtle-2.gif>>
%

%% Dragon Curve
% The dragon space-filling fractal curve was invented by NASA
% physicist John Heighway and his colleagues and featured in 
% Martin Gardner's _Scientific American_ column in 1967. I made a
% <https://blogs.mathworks.com/cleve/2018/04/06/the-dragon-curve
% Cleve's Corner> posting about the dragon curve in 2018.
%
% Here is MLogo's dragon.
%
% <<Dragon-1.gif>>
%
% Here is a frame from "Numberphile" video where Brady Haran visits
% <https://www.youtube.com/watch?v=v678Em6qyzk Don Knuth>
% and the unique ceramic tile dragon in his home.
%
% <<Knuth.png>>

%% Hilbert Curve
% <https://en.wikipedia.org/wiki/David_Hilbert David Hilbert>
% (1862-1943), one of the most influential mathematicians
% of his era, introduced the space-filling fractal 
% <https://en.wikipedia.org/wiki/Hilbert_curve Hilbert curve>
% in 1891.
%
% Here is MLogo's Hilbert curve.
%
% <<Hilbert.gif>>
%
% Here is a crazy application of the Hilbert curve,
% Randall Munroe's view of Internet addresses in 2006,
% <https://xkcd.com/195>.
%
% <<xkcd.png>>
%
% <https://xkcd.com/195>
%
%% Gosper Fractal
% <https://en.wikipedia.org/wiki/Bill_Gosper Bill Gosper>,
% one of the original MIT "hackers",
% has made major contributions to Lisp and Macsyma,
% found the "glider gun" for Conway's Game of Life,
% and invented the Gosper fractal.
%
% Here is MLogo's rendition.
%
% <<Gosper-1.gif>>
%
% Dragon Nerd creates jewelry from the Gosper curve and other fractals.
%
% <<DragonNerd.png>>
%
% <https://www.etsy.com/shop/DragonNerd>

%% Algorithmic Beauty of Plants
% "The Algorithmic Beauty of Plants" is a beautiful book by
% Przemyslaw Prusinkiewicz and Aristid Lindenmayer, featuring
% over fifty color figures of computer-generated plants.
% The original book is available from 
% <https://link.springer.com/book/10.1007/978-1-4613-8476-2
% Springer Nature>.  A PDF version is available from
% <https://algorithmicbotany.org/papers/#abop
% AlgormicBotany> at the University of Calgary.
%
% <<abop.png>>
%
% This is MLogo's rendition of one small example.
%
% <<Plant-2.gif>>
%

%% Software
%
% <https://blogs.mathworks.com/cleve/files/MLogo.m>

##### SOURCE END ##### 038066df016b4e6685a8571703c3f9db
-->]]></content><author><name>MathWorks Blogs</name></author><category term="mathworks" /><summary type="html"><![CDATA[No, this is not the script for an episode of "Game of Thrones". It is a blog post about Lindenmayer grammars, growing plants, space-filling fractals, turtle graphics and dragon curves.]]></summary></entry><entry><title type="html">The Hat, a Tridecagon Aperiordic Monotile</title><link href="https://hpc.social/commercial-blog/2025/the-hat-a-tridecagon-aperiordic-monotile/" rel="alternate" type="text/html" title="The Hat, a Tridecagon Aperiordic Monotile" /><published>2025-03-27T16:30:52-06:00</published><updated>2025-03-27T16:30:52-06:00</updated><id>https://hpc.social/commercial-blog/2025/the-hat-a-tridecagon-aperiordic-monotile</id><content type="html" xml:base="https://hpc.social/commercial-blog/2025/the-hat-a-tridecagon-aperiordic-monotile/"><![CDATA[<div class="content"><!--introduction-->
<p>Two years ago, in March of 2023, an unlikely team of mathematical hobbyists announced the discovery of a remarkable 13-sided polygon that they nick-named the "Hat". Today, a Google search for the Hat's more formal name, "Aperiodic Monotile", yields dozens of links.</p>

<p>This blog post is about the Hat and the resulting <tt>polyshape</tt> object.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/hat.png" vspace="5" /> </p>

<!--/introduction-->
<h3>Contents</h3>
<div>
<ul>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#47b05df3-6f23-47ad-b33e-eeae5b4b2822">An Aperiodic Monotile</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#19f4faeb-8f21-4d97-8f08-1531f4c826d5">Tilings</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#4ece77ab-9cf1-45f7-8a4b-63021b78316f">Tridecagons</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#a3c51c10-1d21-4888-a3b3-25da70fac536">Penrose Tiling</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#50b6067c-f41a-4758-aa37-eaa346cbf0d9">Reflections</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#e6049ad0-8f8c-4c08-a097-eb440a0902a7">Monotile Tiling</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#7c35a5ad-2cde-45b0-9451-1276d5b7a8a9">Polyshapes</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#4645d478-11a0-4e5a-8ea3-36bdda8c1e9c">Level 0</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#88ebca11-e5fd-4596-b7c8-543ba7261e66">Level 1</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#cbe159ac-4696-42ed-8038-0aeb10f035ec">Level 2</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#6d0246a4-496b-47ef-8e97-866a074ed1d0">Level 3</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#42c85302-ca00-44af-a291-221be3893d76">Numbers</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#efb8c915-e026-43f2-ae98-4c375c0da12f">Level Color</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#52bfd4a0-ab54-4291-bd8d-33faf7ad7dde">Convex Hull</a>
</li>
</ul>
</div>

<h4>An Aperiodic Monotile<a name="47b05df3-6f23-47ad-b33e-eeae5b4b2822"></a>
</h4>
<p>The authors of the paper that announced the discovery of the Hat are <a href="https://the-orangery.weebly.com">David Smith</a>, <a href="https://www.polyomino.org.uk">Joseph Samuel Myers</a>, <a href="https://cs.uwaterloo.ca/~csk/">Craig S. Kaplan</a> and <a href="https://chaimgoodmanstrauss.com/">Chaim Goodman-Strauss</a>. The announcement was made in an <tt>archive&gt;math</tt> preprint with the title <a href="https://arxiv.org/abs/2303.10798">"An Aperiodic Monotile"</a>.</p>

<p>Within days of the announcement, articles like this one in <a href="https://www.sciencenews.org/article/mathematicians-discovered-einstein-tile">Science News</a> appeared. Two months later, Florentin Waligorski created an <a href="https://www.youtube.com/watch?v=BoAx-rLo5P0">origami Hat</a>.</p>

<p>The official paper was published in June of 2024 in the journal <i>Combinatorial Theory</i>. It was also titled <a href="https://doi.org/10.5070/C64163843">"An Aperiodic Monotile"</a>.</p>

<p>I first heard about the Hat is an article by Erica Klarreich in the magazine <i>Quanta</i>, <a href="https://www.quantamagazine.org/hobbyist-finds-maths-elusive-einstein-tile-20230404/">Hobbyist Finds Math&rsquo;s Elusive &lsquo;Einstein&rsquo; Tile</a>.</p>

<h4>Tilings<a name="19f4faeb-8f21-4d97-8f08-1531f4c826d5"></a>
</h4>
<p>Quoting <a href="https://en.wikipedia.org/wiki/Tessellation">Wikipedia</a>:</p>

<pre>  A "tessellation" or "tiling" is the covering of a surface,
  often a plane, using one or more geometric shapes, called "tiles"
  with no overlaps and no gaps.</pre>
<pre>  A "periodic tiling" has a repeating pattern. Some special kinds
  include regular tilings with regular polygonal tiles all of the
  same shape, and semiregular tilings with regular tiles of more
  than one shape and with every corner identically arranged.</pre>
<pre>  A tiling that lacks a repeating pattern is called "aperiodic".
  An aperiodic tiling uses a small set of tile shapes that
  cannot form a repeating pattern.</pre>
<h4>Tridecagons<a name="4ece77ab-9cf1-45f7-8a4b-63021b78316f"></a>
</h4>
<p>A <i>tridecagon</i> is a polygon with 13 sides, like this gold coin from the Czech Republic. The sides of a <i>regular</i> <i>tridecagon</i> are all the same length. Any attempt to tile your floor with these coins inevitably has gaps. Regular tridecagons cannot tile the plane. The Hat is an <i>irregular</i> tridecagon that can tile the plane.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/20_CZK.png" vspace="5" /> </p>

<h4>Penrose Tiling<a name="a3c51c10-1d21-4888-a3b3-25da70fac536"></a>
</h4>
<p>
<a href="https://en.wikipedia.org/wiki/Roger_Penrose">Roger Penrose</a> is a <a href="https://www.google.com/search?q=Nobel+prize">Nobel prize-winning</a> mathematician and physicist. Among his many achievements are the <a href="https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse">Moore-Penrose pseudoinverse</a> and the <a href="https://en.wikipedia.org/wiki/Penrose_tiling">Penrose tiling</a>. The Penrose tiling uses these regular quadrilateral tiles, the "kite" and the "dart", to produce an aperiodic tiling with two tiles. The Hat generates an aperiodic tiling with a <i>single</i> tile.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/Kite_Dart.png" vspace="5" /> </p>

<p>
<a href="https://steveeddins.com/">Steve Eddins</a> is a <a href="https://blogs.mathworks.com/cleve/files/foc.txt">FOC-winning</a> French horn player. Among his many achievements is a <a href="https://blogs.mathworks.com/cleve/2018/11/26/penrose-and-fourier-design-playing-cards/">Cleve's Corner</a> about this Penrose tiling.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/Penrose.png" vspace="5" /> </p>

<h4>Reflections<a name="50b6067c-f41a-4758-aa37-eaa346cbf0d9"></a>
</h4>
<p>We say that the Hat on the left is reflected and the one on the right is not reflected.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/polarity.png" vspace="5" /> </p>

<h4>Monotile Tiling<a name="e6049ad0-8f8c-4c08-a097-eb440a0902a7"></a>
</h4>
<p>Here is (a finite piece of) an infinite, aperiodic tiling of the plane using only the Hat and its reflection. This figure is one half of figure 2.12 from the original preprint, <a href="https://doi.org/10.5070/C64163843">"An Aperiodic Monotile"</a>. Each dark blue tile is surrounded by three light blue tiles. The white tiles appear alone or in pairs. If you look carefully, you can see the grey tiles form filaments. The filaments are more apparent in the other half of figure 2.12 on page 20 of the preprint.</p>

<p>The dark tiles are not reflected; all of the other tiles are reflected.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/monotile_tiling.png" vspace="5" /> </p>

<h4>Polyshapes<a name="7c35a5ad-2cde-45b0-9451-1276d5b7a8a9"></a>
</h4>
<p>Quoting the MATLAB documentation for the <a href="https://www.mathworks.com/help/matlab/ref/polyshape.html"><tt>polyshape object</tt></a>.</p>

<pre>  The polyshape function creates polygon-like shapes from 2-D vertices.
  However, unlike polygons, a polyshape can have discontiguous regions
  and holes. The properties of a polyshape object describe its vertices,
  solid regions, and holes.</pre>
<p>All of the figures after this point in the blog post were made with <tt>polyshape/plot</tt>.</p>

<p>We begin with a pentagonal <tt>polyshape</tt> made from a portion of a regular hexagon.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/polyhat0.png" vspace="5" /> </p>

<p>The Hat itself is a <tt>polyshape</tt> formed from the <tt>union</tt> of four rotated and translated copies of the pentagon.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/polyhat1.png" vspace="5" /> </p>

<h4>Level 0<a name="4645d478-11a0-4e5a-8ea3-36bdda8c1e9c"></a>
</h4>
<p>We have experimented with a tiling created by expanding rings of unreflected hats centered around a single reflected hat. We stop after three rings because additional reflected hats are needed to continue.</p>

<p>The zeroth level is a single reflected hat.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/hats_0.gif" vspace="5" /> </p>

<h4>Level 1<a name="88ebca11-e5fd-4596-b7c8-543ba7261e66"></a>
</h4>
<p>The first level adds a ring of three hats.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/hats_1.gif" vspace="5" /> </p>

<h4>Level 2<a name="cbe159ac-4696-42ed-8038-0aeb10f035ec"></a>
</h4>
<p>The second ring has nine more hats.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/hats_2.gif" vspace="5" /> </p>

<h4>Level 3<a name="6d0246a4-496b-47ef-8e97-866a074ed1d0"></a>
</h4>
<p>The level 3 ring has 18 hats.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/hats_3.gif" vspace="5" /> </p>

<h4>Numbers<a name="42c85302-ca00-44af-a291-221be3893d76"></a>
</h4>
<p>Our <tt>Hats</tt> program allows you to move a hat around the screen with your mouse. When you get close to another hat, numbers appear to guide your final approach. Here are vertices 8, 9 and 10 on hat number 6 near vertices 12, 11 and 10 on hat number 2.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/target.png" vspace="5" /> </p>

<p>This crowded figure shows all the hat numbers and all the vertex indices at level 2.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/numbers.png" vspace="5" /> </p>

<h4>Level Color<a name="efb8c915-e026-43f2-ae98-4c375c0da12f"></a>
</h4>
<p>Each level has a single color.</p>

<div>
<ul>
<li>0 Dark blue</li>
<li>1 Light blue</li>
<li>2 White</li>
<li>3 Grey</li>
</ul>
</div>

<p>Compare this with the detail in figure 2.12 of <a href="https://arxiv.org/abs/2303.10798">"An Aperiodic Monotile"</a>.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/levelcolor.png" vspace="5" /> </p>

<h4>Convex Hull<a name="52bfd4a0-ab54-4291-bd8d-33faf7ad7dde"></a>
</h4>
<p>Convex hull is one of many other methods available for <a href="https://www.mathworks.com/help/matlab/ref/polyshape.html"><tt>polyshape objects</tt></a>.</p>

<p>
<img alt="" hspace="5" src="http://blogs.mathworks.com/cleve/files/convhull.png" vspace="5" /> </p>

<!-- 
    function grabCode_8d40a9f81f874076b9a0b40b3a48ce78() {
        // Remember the title so we can use it in the new page
        title = document.title;

        // Break up these strings so that their presence
        // in the Javascript doesn't mess up the search for
        // the MATLAB code.
        t1='8d40a9f81f874076b9a0b40b3a48ce78 ' + '##### ' + 'SOURCE BEGIN' + ' #####';
        t2='##### ' + 'SOURCE END' + ' #####' + ' 8d40a9f81f874076b9a0b40b3a48ce78';
    
        b=document.getElementsByTagName('body')[0];
        i1=b.innerHTML.indexOf(t1)+t1.length;
        i2=b.innerHTML.indexOf(t2);
 
        code_string = b.innerHTML.substring(i1, i2);
        code_string = code_string.replace(/REPLACE_WITH_DASH_DASH/g,'--');

        // Use /x3C/g instead of the less-than character to avoid errors 
        // in the XML parser.
        // Use '\x26#60;' instead of '<' so that the XML parser
        // doesn't go ahead and substitute the less-than character. 
        code_string = code_string.replace(/\x3C/g, '\x26#60;');

        copyright = 'Copyright 2025 The MathWorks, Inc.';

        w = window.open();
        d = w.document;
        d.write('<pre>\n');
        d.write(code_string);

        // Add copyright line at the bottom if specified.
        if (copyright.length > 0) {
            d.writeln('');
            d.writeln('%%');
            if (copyright.length > 0) {
                d.writeln('% _' + copyright + '_');
            }
        }

        d.write('</pre>\n');

        d.title = title + ' (MATLAB code)';
        d.close();
    }   
     -->
<p style="text-align: right; font-size: xx-small; font-weight: lighter; font-style: italic; color: gray;">
<br />
<a href=""><span style="font-size: x-small; font-style: italic;">Get 
      the MATLAB code <noscript>(requires JavaScript)</noscript>
</span></a>
<br />
<br />
      Published with MATLAB&reg; R2024b<br />
</p>

</div>

<!--
8d40a9f81f874076b9a0b40b3a48ce78 ##### SOURCE BEGIN #####
%% The Hat, a Remarkable Tridecagon
% Two years ago, in March of 2023, an unlikely team of
% mathematical hobbyists announced the discovery of a remarkable 
% 13-sided polygon that they nick-named the "Hat".
% Today, a Google search for the Hat's more formal name,
% "Aperiodic Monotile", yields dozens of links.
%
% This blog post is about the Hat and the resulting |polyshape| object.
% 
% <<hat.png>>
%

%% An Aperiodic Monotile
% The authors of the paper that announced the discovery of the Hat are
% <https://the-orangery.weebly.com David Smith>, 
% <https://www.polyomino.org.uk Joseph Samuel Myers>, 
% <https://cs.uwaterloo.ca/~csk/ Craig S. Kaplan> and 
% <https://chaimgoodmanstrauss.com/ Chaim Goodman-Strauss>.
% The announcement was made in an |archive>math| preprint with the title
% <https://arxiv.org/abs/2303.10798 "An Aperiodic Monotile">.
%
% Within days of the announcement, articles like this one in
% <https://www.sciencenews.org/article/mathematicians-discovered-einstein-tile
% Science News> appeared.
% Two months later, Florentin Waligorski created an
% <https://www.youtube.com/watch?v=BoAx-rLo5P0 origami Hat>.
%
% The official paper was published in June of 2024 in the journal
% _Combinatorial Theory_.  It was also titled 
% <https://doi.org/10.5070/C64163843 "An Aperiodic Monotile">.
%
% I first heard about the Hat is an article by Erica Klarreich
% in the magazine _Quanta_,
% <https://www.quantamagazine.org/hobbyist-finds-maths-elusive-einstein-tile-20230404/
% Hobbyist Finds Math’s Elusive ‘Einstein’ Tile>.
%

%% Tilings
% Quoting <https://en.wikipedia.org/wiki/Tessellation Wikipedia>:
%
%    A "tessellation" or "tiling" is the covering of a surface, 
%    often a plane, using one or more geometric shapes, called "tiles"
%    with no overlaps and no gaps.
%
%    A "periodic tiling" has a repeating pattern. Some special kinds 
%    include regular tilings with regular polygonal tiles all of the 
%    same shape, and semiregular tilings with regular tiles of more
%    than one shape and with every corner identically arranged.
%
%    A tiling that lacks a repeating pattern is called "aperiodic". 
%    An aperiodic tiling uses a small set of tile shapes that
%    cannot form a repeating pattern.

%% Tridecagons
% A _tridecagon_ is a polygon with 13 sides, like this gold coin from
% the Czech Republic. The sides of a _regular_ _tridecagon_ are all
% the same length.  Any attempt to tile your floor with these coins
% inevitably has gaps.  Regular tridecagons cannot tile the plane.
% The Hat is an _irregular_ tridecagon that can tile the plane. 
%
% <<20_CZK.png>>
%

%% Penrose Tiling
% <https://en.wikipedia.org/wiki/Roger_Penrose Roger Penrose> is a
% <https://www.google.com/search?q=Nobel+prize Nobel prize-winning>
% mathematician and physicist.
% Among his many achievements are the
% <https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse
% Moore-Penrose pseudoinverse> and the
% <https://en.wikipedia.org/wiki/Penrose_tiling Penrose tiling>.
% The Penrose tiling uses these regular quadrilateral tiles,
% the "kite" and the "dart", to produce an aperiodic tiling with
% two tiles.
% The Hat generates an aperiodic tiling with a _single_ tile.
%
% <<Kite_Dart.png>>
%
% <https://steveeddins.com/ Steve Eddins> is a 
% <https://blogs.mathworks.com/cleve/files/foc.txt FOC-winning>
% French horn player.
% Among his many achievements is a 
% <https://blogs.mathworks.com/cleve/2018/11/26/penrose-and-fourier-design-playing-cards/
% Cleve's Corner> about this Penrose tiling.
%
% <<Penrose.png>>
% 

%% Reflections
% We say that the Hat on the left is reflected and the one on the right
% is not reflected.
%
% <<polarity.png>>
%

%% Monotile Tiling
% Here is (a finite piece of) an infinite, aperiodic tiling of the plane
% using only the Hat and its reflection.  
% This figure is one half of figure 2.12 from the original preprint,
% <https://doi.org/10.5070/C64163843 "An Aperiodic Monotile">.
% Each dark blue tile is surrounded by three light blue tiles.
% The white tiles appear alone or in pairs.
% If you look carefully, you can see the grey tiles form filaments.
% The filaments are more apparent in the other half of figure 2.12
% on page 20 of the preprint.
%
% The dark tiles are not reflected; all of the other tiles are reflected.
%
% <<monotile_tiling.png>>
%

%% Polyshapes
% Quoting the MATLAB documentation for the
% <https://www.mathworks.com/help/matlab/ref/polyshape.html
% |polyshape object|>.
%
%    The polyshape function creates polygon-like shapes from 2-D vertices.
%    However, unlike polygons, a polyshape can have discontiguous regions
%    and holes. The properties of a polyshape object describe its vertices,
%    solid regions, and holes.

%%
% All of the figures after this point in the blog post were made with
% |polyshape/plot|.

%%
% We begin with a pentagonal |polyshape| made from a portion of a 
% regular hexagon.
%
% <<polyhat0.png>>
%

%%
% The Hat itself is a |polyshape| formed from the |union| of four rotated
% and translated copies of the pentagon.
%
%
% <<polyhat1.png>>
%

%% Level 0
% We have experimented with a tiling created by expanding rings of
% unreflected hats centered around a single reflected hat.
% We stop after three rings because additional reflected hats
% are needed to continue.

%%
% The zeroth level is a single reflected hat.
%
% <<hats_0.gif>>
%

%% Level 1
% The first level adds a ring of three hats.
%
% <<hats_1.gif>>
%

%% Level 2
% The second ring has nine more hats.
%
% <<hats_2.gif>>
%

%% Level 3
% The level 3 ring has 18 hats.
%
% <<hats_3.gif>>
%

%% Numbers
% Our |Hats| program allows you to move a hat around the screen with
% your mouse.  When you get close to another hat, numbers appear
% to guide your final approach.  Here are vertices 8, 9 and 10 on
% hat number 6 near vertices 12, 11 and 10 on hat number 2. 
%
% <<target.png>>

%%
% This crowded figure shows all the hat numbers and all the vertex
% indices at level 2.
%   
% <<numbers.png>>
%

%% Level Color
% Each level has a single color.
%
% * 0  Dark blue
% * 1  Light blue
% * 2  White
% * 3  Grey
%
% Compare this with the detail in figure 2.12 of
% <https://arxiv.org/abs/2303.10798 "An Aperiodic Monotile">. 
%
% <<levelcolor.png>>
%

%% Convex Hull
% Convex hull is one of many other methods available for
% <https://www.mathworks.com/help/matlab/ref/polyshape.html
% |polyshape objects|>.
%
% <<convhull.png>>
%

##### SOURCE END ##### 8d40a9f81f874076b9a0b40b3a48ce78
-->]]></content><author><name>MathWorks Blogs</name></author><category term="mathworks" /><summary type="html"><![CDATA[Two years ago, in March of 2023, an unlikely team of mathematical hobbyists announced the discovery of a remarkable 13-sided polygon that they nick-named the "Hat". Today, a Google search for the Hat's more formal name, "Aperiodic Monotile", yields dozens of links.]]></summary></entry><entry><title type="html">Matrices at an Exposition</title><link href="https://hpc.social/commercial-blog/2025/matrices-at-an-exposition/" rel="alternate" type="text/html" title="Matrices at an Exposition" /><published>2025-03-07T16:21:56-07:00</published><updated>2025-03-07T16:21:56-07:00</updated><id>https://hpc.social/commercial-blog/2025/matrices-at-an-exposition</id><content type="html" xml:base="https://hpc.social/commercial-blog/2025/matrices-at-an-exposition/"><![CDATA[<div class="content"><!--introduction-->
<p>A look at the structure, and the eigenvalues and singular values of interesting test matrices.</p>

<!--/introduction-->
<h3>Contents</h3>
<div>
<ul>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#f44a3f1b-f808-41d4-a66f-f2cce10287dd">Wilkinson</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#54f8e32a-b6c4-4bff-805c-2fcf4cc01309">Parter</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#8d7ed044-57b1-4c74-9e0a-fa30ff9194d2">Bucky</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#608e9f99-1ae9-4496-b7dc-cf082abb6f08">Checkerboard</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#0a2419d6-28c5-4683-974d-abc97d2388dc">Companion</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#dfac2927-7f5b-4987-9dc3-3f8d41f6bb32">Fiedler</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#9de50834-140d-4fdc-b016-4882204d9272">Redheffer</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#e7db7d8c-8230-4dfb-bab9-255dabcae02d">Permutation</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#99e3f6f0-feee-488c-9304-e95be2aa1486">Random</a>
</li>
<li>
<a href="https://feeds.feedburner.com/mathworks/moler#791596eb-5f2d-415d-a61e-7c49a068db9c">Software</a>
</li>
</ul>
</div>

<h4>Wilkinson<a name="f44a3f1b-f808-41d4-a66f-f2cce10287dd"></a>
</h4>
<p>J. H. Wilkinson's most famous examples are <tt>Wn+</tt>, a family of symmetric, tridiagonal matrices with pairs of "remarkably" and "pathologically" close eigenvalues. The two largest eigenvalues of <tt>W20+</tt>,</p>

<pre>   10.246194182902979 and
   10.246194182903745,</pre>
<p>agree to 12 decimal places.</p>

<p>For more, see my blog post on <a href="https://blogs.mathworks.com/cleve/2013/04/15/wilkinsons-matrices-2">Wilkinson matrices</a>. And see page 308 of Wilkinson's <i>The Algebraic Eigenvalue Problem</i>.</p>

<pre class="codeinput">
    n = 20;
    m = (n-1)/2;
    D = diag(ones(n-1,1),1);
    A = diag(abs(-m:m)) + D + D';
    mat_expo(A,'wilkinson')
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/mat_expo_blog_01.png" vspace="5" /> <h4>Parter<a name="54f8e32a-b6c4-4bff-805c-2fcf4cc01309"></a>
</h4>
<p>One of my favorite test matrices is this nonsymmetric cousin of the Hilbert matrix. I was surprised when I discovered that most of its singular values are equal to <tt>pi</tt>. Seymour Parter explained why. See <a href="https://blogs.mathworks.com/cleve/2014/02/03/surprising-svd-square-waves-and-pi/">Surprising SVD, Square Waves and Pi</a>.</p>

<pre class="codeinput">
    j = 1:n;
    k = j';
    A = 1./(k-j+1/2);
    mat_expo(A,'parter')
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/mat_expo_blog_02.png" vspace="5" /> <h4>Bucky<a name="8d7ed044-57b1-4c74-9e0a-fa30ff9194d2"></a>
</h4>
<p>The leading 20-by-20 submatrix of the 60-by-60 Bucky Ball is symmetric, so its eigenvalues are real. But the matrix is not positive definite, so the eigenvalues do not equal the singular values. See <a href="https://blogs.mathworks.com/cleve/2021/05/12/bringing-back-the-bucky-ball/">Bringing Back the Bucky Ball</a>.</p>

<pre class="codeinput">
    B = bucky;
    A = B(1:n,1:n);
    mat_expo(A,'bucky')
    
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/mat_expo_blog_03.png" vspace="5" /> <h4>Checkerboard<a name="608e9f99-1ae9-4496-b7dc-cf082abb6f08"></a>
</h4>
<p>We introduced the Checkerboard family just two weeks ago; see <a href="https://blogs.mathworks.com/cleve/2025/02/23/two-flavors-of-svd">Two Flavors of SVD</a>. There are only two nonzero eigenvalues and singular values.</p>

<pre class="codeinput">
    A = checkerboard(n/4,2,2);
    mat_expo(A,'checkerboard')
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/mat_expo_blog_04.png" vspace="5" /> <h4>Companion<a name="0a2419d6-28c5-4683-974d-abc97d2388dc"></a>
</h4>
<p>Before 1965, the fact that the eigenvalues of a companion matrix are equal to the zeros of the polynomial with coefficients in the first row was often the basis of methods to compute matrix eigenvalues. But the discovery of modern QR methods allowed the first MATLAB to reverse this approach and compute polynomial zeros as matrix eigenvalues.</p>

<p>In this example, the polynomial coefficients are 1:n+1 and the polynomial zeros lie on a nearly circular curve in the complex plane.</p>

<pre class="codeinput">
    c = 2:n+1;
    A = diag(ones(n-1,1),-1);
    A(1,:) = -c;
    mat_expo(A,'companion')
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/mat_expo_blog_05.png" vspace="5" /> <h4>Fiedler<a name="dfac2927-7f5b-4987-9dc3-3f8d41f6bb32"></a>
</h4>
<p>Fiedler companion matrix. Discovered by a contemporary Czech mathematician, Miroslav Fiedler, this matrix distributes the polynomial coefficients along the diagonals of an elegant pentadiagonal matrix whose eigenvalues are equal to the zeros of the polynomial. See <a href="https://blogs.mathworks.com/cleve/2013/12/23/fiedler-companion-matrix">Fiedler companion matrix</a>.</p>

<p>Here is the same polynomial as the traditional companion matrix.</p>

<pre class="codeinput">
    A = fiedler(c);
    mat_expo(A,'fiedler')
    
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/mat_expo_blog_06.png" vspace="5" /> <h4>Redheffer<a name="9de50834-140d-4fdc-b016-4882204d9272"></a>
</h4>
<p>The Redheffer matrix has been in the <tt>gallery</tt> for a long time, but I ignored it until last September. Then I began a long series of blog posts. See <a href="https://blogs.mathworks.com/cleve/2024/09/23/redheffer-mertens-and-one-million-dollars/">Redheffer and One Million Dollars</a> and <a href="https://blogs.mathworks.com/cleve/2024/10/22/mobius-mertens-and-redheffer">M&ouml;bius, Mertens and Redheffer</a>.</p>

<p>Most of the eigenvalues of the Redheffer matrix are equal to one. The product of all the eigenvalues, the determinant, is the Mertens function, which is related to the Riemann hypothesis.</p>

<pre class="codeinput">
    A = gallery('redheff',n);
    mat_expo(A,'redheffer')
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/mat_expo_blog_07.png" vspace="5" /> <h4>Permutation<a name="e7db7d8c-8230-4dfb-bab9-255dabcae02d"></a>
</h4>
<p>A permutation matrix has a single 1 in each row and column and 0's elsewhere. The matrix is orthogonal, so all the eigenvalues lie on the unit circle and all the singular values are equal to one.</p>

<pre class="codeinput">
    p = randperm(n);
    A = sparse(p,1:n,1);
    mat_expo(A,'permutation')
    
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/mat_expo_blog_08.png" vspace="5" /> <h4>Random<a name="99e3f6f0-feee-488c-9304-e95be2aa1486"></a>
</h4>
<p>This random matrix has about 1/3 of its elements equal to zero and the remaining elements normally distributed about zero. I have included such a matrix in this exposition to represent matrices in general that do not have particularly remarkable eigenvalues and singular values.</p>

<pre class="codeinput">
    A = sprandn(n,n,1/3);
    mat_expo(A,'sprandn')
            
</pre>
<img alt="" hspace="5" src="https://blogs.mathworks.com/cleve/files/mat_expo_blog_09.png" vspace="5" /> <h4>Software<a name="791596eb-5f2d-415d-a61e-7c49a068db9c"></a>
</h4>
<p>You can <tt>publish</tt> the source for this blog post if you also have the three functions in <a href="https://blogs.mathworks.com/cleve/files/MatExpo_mzip.m">Mat_Expo_mzip</a>.</p>

<!-- 
    function grabCode_3f61369346ec476aa19ed9e1ce542433() {
        // Remember the title so we can use it in the new page
        title = document.title;

        // Break up these strings so that their presence
        // in the Javascript doesn't mess up the search for
        // the MATLAB code.
        t1='3f61369346ec476aa19ed9e1ce542433 ' + '##### ' + 'SOURCE BEGIN' + ' #####';
        t2='##### ' + 'SOURCE END' + ' #####' + ' 3f61369346ec476aa19ed9e1ce542433';
    
        b=document.getElementsByTagName('body')[0];
        i1=b.innerHTML.indexOf(t1)+t1.length;
        i2=b.innerHTML.indexOf(t2);
 
        code_string = b.innerHTML.substring(i1, i2);
        code_string = code_string.replace(/REPLACE_WITH_DASH_DASH/g,'--');

        // Use /x3C/g instead of the less-than character to avoid errors 
        // in the XML parser.
        // Use '\x26#60;' instead of '<' so that the XML parser
        // doesn't go ahead and substitute the less-than character. 
        code_string = code_string.replace(/\x3C/g, '\x26#60;');

        copyright = 'Copyright 2025 The MathWorks, Inc.';

        w = window.open();
        d = w.document;
        d.write('<pre>\n');
        d.write(code_string);

        // Add copyright line at the bottom if specified.
        if (copyright.length > 0) {
            d.writeln('');
            d.writeln('%%');
            if (copyright.length > 0) {
                d.writeln('% _' + copyright + '_');
            }
        }

        d.write('</pre>\n');

        d.title = title + ' (MATLAB code)';
        d.close();
    }   
     -->
<p style="text-align: right; font-size: xx-small; font-weight: lighter; font-style: italic; color: gray;">
<br />
<a href=""><span style="font-size: x-small; font-style: italic;">Get 
      the MATLAB code <noscript>(requires JavaScript)</noscript>
</span></a>
<br />
<br />
      Published with MATLAB&reg; R2024b<br />
</p>

</div>

<!--
3f61369346ec476aa19ed9e1ce542433 ##### SOURCE BEGIN #####
%% Matrices at an Exposition
% A look at the structure, and the eigenvalues and singular values of
% interesting test matrices.
  
%% Wilkinson
% J. H. Wilkinson's most famous examples are |Wn+|, a family of symmetric, 
% tridiagonal matrices with pairs of "remarkably" and "pathologically" 
% close eigenvalues. The two largest eigenvalues of |W20+|,
%
%     10.246194182902979 and
%     10.246194182903745,
%
% agree to 12 decimal places.
%
% For more, see my blog post on 
% <https://blogs.mathworks.com/cleve/2013/04/15/wilkinsons-matrices-2
% Wilkinson matrices>.
% And see page 308 of Wilkinson's _The Algebraic Eigenvalue Problem_.

    n = 20;
    m = (n-1)/2;
    D = diag(ones(n-1,1),1);
    A = diag(abs(-m:m)) + D + D';
    mat_expo(A,'wilkinson')

%% Parter
% One of my favorite test matrices is this nonsymmetric cousin of the
% Hilbert matrix.  I was surprised when I discovered that
% most of its singular values are equal to |pi|. 
% Seymour Parter explained why.  See
% <https://blogs.mathworks.com/cleve/2014/02/03/surprising-svd-square-waves-and-pi/
% Surprising SVD, Square Waves and Pi>. 

    j = 1:n;
    k = j';
    A = 1./(k-j+1/2);
    mat_expo(A,'parter')

%% Bucky
% The leading 20-by-20 submatrix of the 60-by-60 Bucky Ball is symmetric,
% so its eigenvalues are real.  But the matrix is not positive definite,
% so the eigenvalues do not equal the singular values.  See
% <https://blogs.mathworks.com/cleve/2021/05/12/bringing-back-the-bucky-ball/
% Bringing Back the Bucky Ball>. 

    B = bucky;
    A = B(1:n,1:n);
    mat_expo(A,'bucky')
    
%% Checkerboard
% We introduced the Checkerboard family just two weeks ago; see
% <https://blogs.mathworks.com/cleve/2025/02/23/two-flavors-of-svd
% Two Flavors of SVD>.  There are only two nonzero eigenvalues and
% singular values.

    A = checkerboard(n/4,2,2);
    mat_expo(A,'checkerboard')

%% Companion
% Before 1965, the fact that the eigenvalues of a companion matrix are
% equal to the zeros of the polynomial with coefficients in the
% first row was often the basis of methods to compute matrix eigenvalues.
% But the discovery of modern QR methods allowed the first MATLAB to
% reverse this approach and compute polynomial zeros as matrix
% eigenvalues.
%
% In this example, the polynomial coefficients are 1:n+1 and the 
% polynomial zeros lie on a nearly circular curve in the complex plane.

    c = 2:n+1;
    A = diag(ones(n-1,1),-1);
    A(1,:) = -c;
    mat_expo(A,'companion')

%% Fiedler
% Fiedler companion matrix.
% Discovered by a contemporary Czech mathematician, Miroslav Fiedler,
% this matrix distributes the polynomial coefficients along the
% diagonals of an elegant pentadiagonal matrix whose eigenvalues are 
% equal to the zeros of the polynomial.  See
% <https://blogs.mathworks.com/cleve/2013/12/23/fiedler-companion-matrix
% Fiedler companion matrix>.
%
% Here is the same polynomial as the traditional companion matrix.

    A = fiedler(c);
    mat_expo(A,'fiedler')
    
%% Redheffer
% The Redheffer matrix has been in the |gallery| for a long time, but
% I ignored it until last September.  Then  I began a long series of
% blog posts.  See
% <https://blogs.mathworks.com/cleve/2024/09/23/redheffer-mertens-and-one-million-dollars/
% Redheffer and One Million Dollars> and
% <https://blogs.mathworks.com/cleve/2024/10/22/mobius-mertens-and-redheffer
% Möbius, Mertens and Redheffer>.
%
% Most of the eigenvalues of the Redheffer matrix are equal to one.
% The  product of all the eigenvalues, the determinant, is the Mertens 
% function, which is related to the Riemann hypothesis.

    A = gallery('redheff',n);
    mat_expo(A,'redheffer')

%% Permutation
% A permutation matrix has a single 1 in each row and column and 0's
% elsewhere.  The matrix is orthogonal, so all the eigenvalues lie on
% the unit circle and all the singular values are equal to one.

    p = randperm(n);
    A = sparse(p,1:n,1);
    mat_expo(A,'permutation')
    
%% Random
% This random matrix has about 1/3 of its elements equal to zero
% and the remaining elements normally distributed about zero.
% I have included such a matrix in this exposition to represent matrices
% in general that do not have particularly remarkable eigenvalues and
% singular values.

    A = sprandn(n,n,1/3);
    mat_expo(A,'sprandn')
            
%% Software
% You can |publish| the source for this blog post if you also have
% the three functions in
% <https://blogs.mathworks.com/cleve/files/MatExpo_mzip.m
% Mat_Expo_mzip>.
##### SOURCE END ##### 3f61369346ec476aa19ed9e1ce542433
-->]]></content><author><name>MathWorks Blogs</name></author><category term="mathworks" /><summary type="html"><![CDATA[A look at the structure, and the eigenvalues and singular values of interesting test matrices.]]></summary></entry></feed>